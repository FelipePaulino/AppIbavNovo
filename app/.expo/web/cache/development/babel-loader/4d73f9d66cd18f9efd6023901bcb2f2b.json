{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\nimport RequestService from \"../../common/services/RequestService\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GetStorage } from \"../../common/constants/storage\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { DateComponent } from \"../../components/Date\";\nimport { ModalComponent } from \"../../components/Modal\";\nimport { HeaderComponent } from \"../../components/Header\";\nimport { SelectComponent } from \"../../components/Select\";\nimport { ButtonComponent } from \"../../components/Button\";\nimport { ComeBackComponent } from \"../../components/ComeBack\";\nimport { InputFieldComponent } from \"../../components/InputField\";\nimport { DefaultContentModalComponent } from \"../../components/Modal/Default\";\nimport MenuNavigation from \"../../common/constants/navigation\";\nimport FormFields from \"../../common/constants/form\";\nimport * as S from \"./styles\";\nimport { selectCategory, selectCivilStatus, selectState } from \"../../common/utils/selects\";\nimport { connectApi } from \"../../common/services/ConnectApi\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function MembersInformationScreen(_ref) {\n  var _route$params, _route$params2, _route$params3, _route$params4, _route$params5, _route$params6, _route$params7, _route$params8, _route$params9, _route$params10, _route$params11, _route$params12;\n\n  var route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      successModal = _useState2[0],\n      setSuccessModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showCalender = _useState4[0],\n      setShowCalender = _useState4[1];\n\n  var _useState5 = useState(((_route$params = route.params) == null ? void 0 : _route$params.cep) || \"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cep = _useState6[0],\n      setCep = _useState6[1];\n\n  var _useState7 = useState(((_route$params2 = route.params) == null ? void 0 : _route$params2.nome) || \"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var _useState9 = useState(((_route$params3 = route.params) == null ? void 0 : _route$params3.cidade) || \"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setCity = _useState10[1];\n\n  var _useState11 = useState(((_route$params4 = route.params) == null ? void 0 : _route$params4.email) || \"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  var _useState13 = useState(((_route$params5 = route.params) == null ? void 0 : _route$params5.estado) || \"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      state = _useState14[0],\n      setState = _useState14[1];\n\n  var _useState15 = useState(((_route$params6 = route.params) == null ? void 0 : _route$params6.status) || \"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      status = _useState16[0],\n      setStatus = _useState16[1];\n\n  var _useState17 = useState(((_route$params7 = route.params) == null ? void 0 : _route$params7.telefone) || \"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      phone = _useState18[0],\n      setPhone = _useState18[1];\n\n  var _useState19 = useState(((_route$params8 = route.params) == null ? void 0 : _route$params8.endereco) || \"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      address = _useState20[0],\n      setAddress = _useState20[1];\n\n  var _useState21 = useState(((_route$params9 = route.params) == null ? void 0 : _route$params9.bairro) || \"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      district = _useState22[0],\n      setDistrict = _useState22[1];\n\n  var _useState23 = useState(((_route$params10 = route.params) == null ? void 0 : _route$params10.data_de_nascimento) || \"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      birthday = _useState24[0],\n      setBirthday = _useState24[1];\n\n  var _useState25 = useState(((_route$params11 = route.params) == null ? void 0 : _route$params11.estado_civil) || \"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      civilStatus = _useState26[0],\n      setCivilStatus = _useState26[1];\n\n  var _useState27 = useState((_route$params12 = route.params) == null ? void 0 : _route$params12.id),\n      _useState28 = _slicedToArray(_useState27, 2),\n      id = _useState28[0],\n      setId = _useState28[1];\n\n  var _useState29 = useState(new Date()),\n      _useState30 = _slicedToArray(_useState29, 2),\n      date = _useState30[0],\n      setDate = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      celulas = _useState32[0],\n      setCelulas = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      members = _useState34[0],\n      setMembers = _useState34[1];\n\n  var _useUserFiltered = useUserFiltered(),\n      user = _useUserFiltered.user;\n\n  var navigation = useNavigation();\n\n  var _useFormReport = useFormReport(),\n      trigger = _useFormReport.trigger,\n      setTrigger = _useFormReport.setTrigger,\n      celulaId = _useFormReport.celulaId;\n\n  var identifyCelula = user && user[0][1].numero_celula;\n  var serviceGet = new RequestService();\n  useEffect(function () {\n    var getCelulas = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        yield serviceGet.getCelulas().then(function (response) {\n          setCelulas(Object.entries(response));\n        });\n      });\n\n      return function getCelulas() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getCelulas();\n  }, []);\n  useEffect(function () {\n    var filterMembers = celulas && celulas.filter(function (item) {\n      return item[1].numero_celula == identifyCelula;\n    });\n\n    if (filterMembers) {\n      setMembers(filterMembers);\n      AsyncStorage.setItem(GetStorage.MEMBERS_FILTERED, JSON.stringify(filterMembers));\n    }\n  }, [identifyCelula, celulas]);\n\n  var showMode = function showMode() {\n    setShowCalender(true);\n  };\n\n  var handleDateChange = function handleDateChange(event, selectedDate) {\n    var currentDate = selectedDate || state.dateRegister;\n    setShowCalender(false);\n    var tempDate = new Date(currentDate);\n    var newDate = tempDate.getDate() + \"/\" + (tempDate.getMonth() + 1) + \"/\" + tempDate.getFullYear();\n    setDate(currentDate);\n    setBirthday(newDate);\n  };\n\n  var timeModal = function timeModal() {\n    setSuccessModal(true);\n  };\n\n  var submitRegister = function submitRegister() {\n    try {\n      connectApi.put(\"/celulas/\" + celulaId + \"/membros/\" + id + \".json\", {\n        nome: name,\n        status: status,\n        telefone: phone,\n        email: email,\n        endereco: address,\n        cep: cep,\n        bairro: district,\n        cidade: city,\n        estado: state,\n        data_de_nascimento: birthday,\n        estado_civil: civilStatus\n      });\n      setTrigger(!trigger);\n      setTimeout(timeModal, 300);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeaderComponent, {\n      children: _jsxs(S.Division, {\n        children: [_jsx(ComeBackComponent, {}), _jsx(S.Navigation, {\n          children: MenuNavigation.MEMBERS\n        })]\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(S.Container, {\n        children: [_jsxs(S.Form, {\n          children: [_jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: name === \"undefined\" ? FormFields.FULL_NAME : name,\n              placeholder: \"* \" + FormFields.FULL_NAME,\n              onChangeText: function onChangeText(value) {\n                return setName(value);\n              },\n              label: \"*Nome Completo\"\n            })\n          }), _jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: phone === \"undefined\" ? FormFields.PHONE : phone,\n              placeholder: \"* \" + FormFields.PHONE,\n              onChangeText: function onChangeText(value) {\n                return setPhone(value);\n              },\n              label: \"*Telefone\"\n            })\n          }), _jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: email === \"undefined\" ? FormFields.EMAIL : email,\n              placeholder: FormFields.EMAIL,\n              onChangeText: function onChangeText(value) {\n                return setEmail(value);\n              },\n              label: \"*Email\"\n            })\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: address && address,\n                placeholder: FormFields.ADDRESS,\n                onChangeText: function onChangeText(value) {\n                  return setAddress(value);\n                },\n                label: \"Endere\\xE7o\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: cep === \"undefined\" ? FormFields.CEP : cep,\n                placeholder: FormFields.CEP,\n                onChangeText: function onChangeText(value) {\n                  return setCep(value);\n                },\n                label: \"Cep\"\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: district === \"undefined\" ? FormFields.DISTRICT : district,\n                placeholder: FormFields.DISTRICT,\n                onChangeText: function onChangeText(value) {\n                  return setDistrict(value);\n                },\n                label: \"Bairro\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: city === \"undefined\" ? FormFields.CITY : city,\n                placeholder: FormFields.CITY,\n                onChangeText: function onChangeText(value) {\n                  return setCity(value);\n                },\n                label: \"Cidade\"\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Estado\",\n                onChange: function onChange(labelSelect) {\n                  return setState(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setState(labelSelect);\n                },\n                labelSelect: state === \"undefined\" ? FormFields.STATE : state,\n                dataOptions: selectState\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Estado Civil\",\n                onChange: function onChange(labelSelect) {\n                  return setCivilStatus(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setCivilStatus(labelSelect);\n                },\n                labelSelect: civilStatus === \"undefined\" ? FormFields.CIVIL_STATUS : civilStatus,\n                dataOptions: selectCivilStatus\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(DateComponent, {\n                text: birthday,\n                open: showMode,\n                showCalender: showCalender,\n                dataDados: date,\n                onChange: handleDateChange,\n                label: \"Data de Nascimento\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Categoria\",\n                onChange: function onChange(labelSelect) {\n                  return setStatus(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setStatus(labelSelect);\n                },\n                labelSelect: status === \"undefined\" ? FormFields.CATEGORY : status,\n                dataOptions: selectCategory\n              })\n            })]\n          })]\n        }), _jsxs(S.FooterFields, {\n          children: [_jsx(S.Required, {\n            children: \"* Campos obrigat\\xF3rios\"\n          }), _jsx(ButtonComponent, {\n            title: \"SALVAR INFORMA\\xC7\\xD5ES\",\n            onPress: submitRegister,\n            width: \"213px\",\n            heigth: \"39px\",\n            size: \"14px\"\n          })]\n        })]\n      })\n    }), _jsx(ModalComponent, {\n      isVisible: successModal,\n      onBackdropPress: function onBackdropPress() {\n        setSuccessModal(false);\n        navigation.navigate(\"Members\");\n      },\n      children: _jsx(DefaultContentModalComponent, {\n        data: name,\n        type: \"edited\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useUserFiltered","RequestService","AsyncStorage","GetStorage","useNavigation","DateComponent","ModalComponent","HeaderComponent","SelectComponent","ButtonComponent","ComeBackComponent","InputFieldComponent","DefaultContentModalComponent","MenuNavigation","FormFields","S","selectCategory","selectCivilStatus","selectState","connectApi","useFormReport","MembersInformationScreen","route","successModal","setSuccessModal","showCalender","setShowCalender","params","cep","setCep","nome","name","setName","cidade","city","setCity","email","setEmail","estado","state","setState","status","setStatus","telefone","phone","setPhone","endereco","address","setAddress","bairro","district","setDistrict","data_de_nascimento","birthday","setBirthday","estado_civil","civilStatus","setCivilStatus","id","setId","Date","date","setDate","celulas","setCelulas","members","setMembers","user","navigation","trigger","setTrigger","celulaId","identifyCelula","numero_celula","serviceGet","getCelulas","then","response","Object","entries","filterMembers","filter","item","setItem","MEMBERS_FILTERED","JSON","stringify","showMode","handleDateChange","event","selectedDate","currentDate","dateRegister","tempDate","newDate","getDate","getMonth","getFullYear","timeModal","submitRegister","put","setTimeout","err","alert","MEMBERS","FULL_NAME","value","PHONE","EMAIL","ADDRESS","CEP","DISTRICT","CITY","labelSelect","STATE","CIVIL_STATUS","CATEGORY","navigate"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/MemberInformation/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\r\nimport RequestService from \"../../common/services/RequestService\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { GetStorage } from \"../../common/constants/storage\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport { DateComponent } from \"../../components/Date\";\r\nimport { ModalComponent } from \"../../components/Modal\";\r\nimport { HeaderComponent } from \"../../components/Header\";\r\nimport { SelectComponent } from \"../../components/Select\";\r\nimport { ButtonComponent } from \"../../components/Button\";\r\nimport { ComeBackComponent } from \"../../components/ComeBack\";\r\nimport { InputFieldComponent } from \"../../components/InputField\";\r\nimport { DefaultContentModalComponent } from \"../../components/Modal/Default\";\r\n\r\nimport MenuNavigation from \"../../common/constants/navigation\";\r\nimport FormFields from \"../../common/constants/form\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { selectCategory, selectCivilStatus, selectState } from \"../../common/utils/selects\";\r\nimport { connectApi } from \"../../common/services/ConnectApi\";\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\n\r\nexport function MembersInformationScreen(this: any, { route }: any) {\r\n    const [successModal, setSuccessModal] = useState(false);\r\n    const [showCalender, setShowCalender] = useState(false);\r\n\r\n    const [cep, setCep] = useState(route.params?.cep || \"\");\r\n    const [name, setName] = useState(route.params?.nome || \"\");\r\n    const [city, setCity] = useState(route.params?.cidade || \"\");\r\n    const [email, setEmail] = useState(route.params?.email || \"\");\r\n    const [state, setState] = useState(route.params?.estado || \"\");\r\n    const [status, setStatus] = useState(route.params?.status || \"\");\r\n    const [phone, setPhone] = useState(route.params?.telefone || \"\");\r\n    const [address, setAddress] = useState(route.params?.endereco || \"\");\r\n    const [district, setDistrict] = useState(route.params?.bairro || \"\");\r\n    const [birthday, setBirthday] = useState(route.params?.data_de_nascimento || \"\");\r\n    const [civilStatus, setCivilStatus] = useState(route.params?.estado_civil || \"\");\r\n    const [id, setId] = useState(route.params?.id)\r\n\r\n    const [date, setDate] = useState(new Date())\r\n    const [celulas, setCelulas] = useState<any>()\r\n    const [members, setMembers] = useState<any>([]);\r\n\r\n    const { user } = useUserFiltered();\r\n    const navigation = useNavigation<IPropsAppStack>();\r\n    const { trigger, setTrigger, celulaId } = useFormReport()\r\n\r\n    const identifyCelula = user && user[0][1].numero_celula;\r\n\r\n    const serviceGet = new RequestService()\r\n\r\n    useEffect(() => {\r\n        const getCelulas = async () => {\r\n            await serviceGet.getCelulas().then((response) => {\r\n                setCelulas(Object.entries(response))\r\n            })\r\n        }\r\n\r\n        getCelulas()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const filterMembers =\r\n            celulas &&\r\n            celulas.filter((item: any) => {\r\n                return item[1].numero_celula == identifyCelula;\r\n            });\r\n\r\n        if (filterMembers) {\r\n            setMembers(filterMembers);\r\n            AsyncStorage.setItem(\r\n                GetStorage.MEMBERS_FILTERED,\r\n                JSON.stringify(filterMembers)\r\n            );\r\n        }\r\n    }, [identifyCelula, celulas]);\r\n\r\n    const showMode = () => {\r\n        setShowCalender(true);\r\n    };\r\n\r\n    const handleDateChange = (event: Event, selectedDate: any) => {\r\n        const currentDate = selectedDate || state.dateRegister;\r\n\r\n        setShowCalender(false);\r\n\r\n        const tempDate = new Date(currentDate);\r\n        const newDate =\r\n            tempDate.getDate() +\r\n            \"/\" +\r\n            (tempDate.getMonth() + 1) +\r\n            \"/\" +\r\n            tempDate.getFullYear();\r\n\r\n        setDate(currentDate)\r\n        setBirthday(newDate)\r\n\r\n    };\r\n\r\n    const timeModal = () => {\r\n        setSuccessModal(true);\r\n    };\r\n\r\n    const submitRegister = () => {\r\n        try {\r\n            connectApi.put(`/celulas/${celulaId}/membros/${id}.json`, {\r\n                nome: name,\r\n                status: status,\r\n                telefone: phone,\r\n                email: email,\r\n                endereco: address,\r\n                cep: cep,\r\n                bairro: district,\r\n                cidade: city,\r\n                estado: state,\r\n                data_de_nascimento: birthday,\r\n                estado_civil: civilStatus\r\n            })\r\n            setTrigger(!trigger)\r\n            setTimeout(timeModal, 300);\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <HeaderComponent>\r\n                <S.Division>\r\n                    <ComeBackComponent />\r\n                    <S.Navigation>{MenuNavigation.MEMBERS}</S.Navigation>\r\n                </S.Division>\r\n                {/* <NotificationComponent /> */}\r\n            </HeaderComponent>\r\n\r\n            <ScrollView>\r\n                <S.Container>\r\n                    <S.Form>\r\n                        <S.GridItemFull>\r\n                            <InputFieldComponent\r\n                                primary\r\n                                value={name === \"undefined\" ? FormFields.FULL_NAME : name}\r\n                                placeholder={`* ${FormFields.FULL_NAME}`}\r\n                                onChangeText={(value) => setName(value)}\r\n                                label=\"*Nome Completo\"\r\n                            />\r\n                        </S.GridItemFull>\r\n\r\n                        <S.GridItemFull>\r\n                            <InputFieldComponent\r\n                                primary\r\n                                value={phone === \"undefined\" ? FormFields.PHONE : phone}\r\n                                placeholder={`* ${FormFields.PHONE}`}\r\n                                onChangeText={(value) => setPhone(value)}\r\n                                label=\"*Telefone\"\r\n                            />\r\n                        </S.GridItemFull>\r\n\r\n                        <S.GridItemFull>\r\n                            <InputFieldComponent\r\n                                primary\r\n                                value={email === \"undefined\" ? FormFields.EMAIL : email}\r\n                                placeholder={FormFields.EMAIL}\r\n                                onChangeText={(value) => setEmail(value)}\r\n                                label=\"*Email\"\r\n                            />\r\n                        </S.GridItemFull>\r\n\r\n                        <S.GridForm>\r\n                            <S.GridItem>\r\n                                <InputFieldComponent\r\n                                    primary\r\n                                    value={address && address}\r\n                                    placeholder={FormFields.ADDRESS}\r\n                                    onChangeText={(value) => setAddress(value)}\r\n                                    label=\"Endereço\"\r\n                                />\r\n                            </S.GridItem>\r\n\r\n                            <S.GridItem>\r\n                                <InputFieldComponent\r\n                                    primary\r\n                                    value={cep === \"undefined\" ? FormFields.CEP : cep}\r\n                                    placeholder={FormFields.CEP}\r\n                                    onChangeText={(value) => setCep(value)}\r\n                                    label=\"Cep\"\r\n                                />\r\n                            </S.GridItem>\r\n                        </S.GridForm>\r\n\r\n                        <S.GridForm>\r\n                            <S.GridItem>\r\n                                <InputFieldComponent\r\n                                    primary\r\n                                    value={district === \"undefined\" ? FormFields.DISTRICT : district}\r\n                                    placeholder={FormFields.DISTRICT}\r\n                                    onChangeText={(value) => setDistrict(value)}\r\n                                    label=\"Bairro\"\r\n                                />\r\n                            </S.GridItem>\r\n\r\n                            <S.GridItem>\r\n                                <InputFieldComponent\r\n                                    primary\r\n                                    value={city === \"undefined\" ? FormFields.CITY : city}\r\n                                    placeholder={FormFields.CITY}\r\n                                    onChangeText={(value) => setCity(value)}\r\n                                    label=\"Cidade\"\r\n                                />\r\n                            </S.GridItem>\r\n                        </S.GridForm>\r\n\r\n                        <S.GridForm>\r\n                            <S.GridItem>\r\n                                <SelectComponent\r\n                                    label=\"Estado\"\r\n                                    onChange={(labelSelect) => setState(labelSelect)}\r\n                                    selectedOption={(labelSelect) => setState(labelSelect)}\r\n                                    labelSelect={state === \"undefined\" ? FormFields.STATE : state}\r\n                                    dataOptions={selectState}\r\n                                />\r\n                            </S.GridItem>\r\n\r\n                            <S.GridItem>\r\n                                <SelectComponent\r\n                                    label=\"Estado Civil\"\r\n                                    onChange={(labelSelect) => setCivilStatus(labelSelect)}\r\n                                    selectedOption={(labelSelect) => setCivilStatus(labelSelect)}\r\n                                    labelSelect={civilStatus === \"undefined\" ? FormFields.CIVIL_STATUS : civilStatus}\r\n                                    dataOptions={selectCivilStatus}\r\n                                />\r\n                            </S.GridItem>\r\n                        </S.GridForm>\r\n\r\n                        <S.GridForm>\r\n                            <S.GridItem>\r\n                                <DateComponent\r\n                                    text={birthday}\r\n                                    open={showMode}\r\n                                    showCalender={showCalender}\r\n                                    dataDados={date}\r\n                                    onChange={handleDateChange}\r\n                                    label=\"Data de Nascimento\"\r\n                                />\r\n                            </S.GridItem>\r\n\r\n                            <S.GridItem>\r\n                                <SelectComponent\r\n                                    label=\"Categoria\"\r\n                                    onChange={(labelSelect) => setStatus(labelSelect)}\r\n                                    selectedOption={(labelSelect) => setStatus(labelSelect)}\r\n                                    labelSelect={status === \"undefined\" ? FormFields.CATEGORY : status}\r\n                                    dataOptions={selectCategory}\r\n                                />\r\n                            </S.GridItem>\r\n                        </S.GridForm>\r\n                    </S.Form>\r\n\r\n                    <S.FooterFields>\r\n                        <S.Required>* Campos obrigatórios</S.Required>\r\n                        <ButtonComponent title=\"SALVAR INFORMAÇÕES\"\r\n                            onPress={submitRegister}\r\n                            width='213px'\r\n                            heigth=\"39px\"\r\n                            size=\"14px\"\r\n                        />\r\n                    </S.FooterFields>\r\n                </S.Container>\r\n            </ScrollView>\r\n\r\n            <ModalComponent\r\n                isVisible={successModal}\r\n                onBackdropPress={() => {\r\n                    setSuccessModal(false);\r\n                    navigation.navigate(\"Members\");\r\n                }\r\n                }\r\n            >\r\n                <DefaultContentModalComponent\r\n                    data={name}\r\n                    type=\"edited\"\r\n                />\r\n            </ModalComponent>\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}