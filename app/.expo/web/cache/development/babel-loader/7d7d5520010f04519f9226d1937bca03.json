{"ast":null,"code":"import React, { Fragment } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { FormReportActions } from \"../../contexts/FormReport\";\nimport { LogoComponent } from \"../../components/Logo\";\nimport { TitleComponent } from \"../../components/Title\";\nimport { HeaderComponent } from \"../../components/Header\";\nimport { SelectedMenuComponent } from \"../../components/SelectedMenu\";\n\nvar loadingGif = require(\"../../assets/loader-two.gif\");\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\nimport * as S from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function HomeScreen() {\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useUserFiltered = useUserFiltered(),\n      loading = _useUserFiltered.loading,\n      user = _useUserFiltered.user;\n\n  var navigation = useNavigation();\n  var dataUser = user && user[0] && user[0][1];\n  var whatIsOffice = dataUser && dataUser.cargo;\n\n  var _useFormReport = useFormReport(),\n      dispatch = _useFormReport.dispatch;\n\n  var clean = function clean(page) {\n    navigation.navigate(page);\n    dispatch({\n      type: FormReportActions.setRedeSelect,\n      payload: \"Selecione\"\n    });\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: \"Selecione\"\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: \"Selecione\"\n    });\n    dispatch({\n      type: FormReportActions.setOffer,\n      payload: \"\"\n    });\n    dispatch({\n      type: FormReportActions.setTextDate,\n      payload: \"Selecione uma data\"\n    });\n    dispatch({\n      type: FormReportActions.setPresencaCulto,\n      payload: []\n    });\n    dispatch({\n      type: FormReportActions.setPresencaCelula,\n      payload: []\n    });\n    dispatch({\n      type: FormReportActions.setDate,\n      payload: new Date()\n    });\n  };\n\n  var office = function office() {\n    switch (whatIsOffice) {\n      case \"lider\":\n        return _jsx(S.Office, {\n          children: \"Lider de C\\xE9lula\"\n        });\n\n      case \"discipulador\":\n        return _jsx(TitleComponent, {\n          title: \"Discipulador\",\n          decoration: true,\n          red: true\n        });\n    }\n  };\n\n  return _jsxs(Fragment, {\n    children: [_jsxs(HeaderComponent, {\n      children: [_jsx(LogoComponent, {\n        full: true\n      }), _jsx(S.Buttons, {\n        children: _jsx(TouchableOpacity, {\n          onPress: signOut,\n          children: _jsx(S.Material, {\n            name: \"logout\",\n            size: 24\n          })\n        })\n      })]\n    }), loading ? _jsx(S.Loading, {\n      source: loadingGif\n    }) : _jsx(S.Content, {\n      children: dataUser && _jsxs(Fragment, {\n        children: [_jsxs(S.Names, {\n          children: [_jsx(S.Name, {\n            children: dataUser.nome\n          }), office()]\n        }), whatIsOffice === \"lider\" && _jsxs(S.Info, {\n          children: [_jsx(S.InfoTextTitle, {\n            children: \"C\\xE9lula\"\n          }), _jsx(S.InfoTextSubtitle, {\n            children: dataUser.numero_celula + \" - \" + dataUser.rede\n          })]\n        }), _jsxs(S.ContentOptions, {\n          children: [_jsx(SelectedMenuComponent, {\n            icon: _jsx(S.SendReportIcon, {\n              name: \"document-text-sharp\"\n            }),\n            title: \"Entregar Relat\\xF3rio\",\n            onPress: function onPress() {\n              return clean(\"SendReport\");\n            }\n          }), whatIsOffice === \"administrador\" ? _jsx(SelectedMenuComponent, {\n            icon: _jsx(S.Material, {\n              name: \"add\",\n              size: 40\n            }),\n            title: \"Cadastro\",\n            onPress: function onPress() {\n              return navigation.navigate(\"PreRegisterAdmin\");\n            }\n          }) : _jsx(SelectedMenuComponent, {\n            icon: _jsx(S.RegisterIcon, {\n              name: \"user-plus\"\n            }),\n            title: \"Cadastrar\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Register\");\n            }\n          }), whatIsOffice === \"administrador\" ? _jsx(SelectedMenuComponent, {\n            icon: _jsx(S.Material, {\n              name: \"format-list-bulleted\",\n              size: 40\n            }),\n            title: \"Listagem\",\n            onPress: function onPress() {\n              return navigation.navigate(\"PreListAdmin\");\n            }\n          }) : _jsx(SelectedMenuComponent, {\n            icon: _jsx(S.MembersIcon, {\n              name: \"user-friends\"\n            }),\n            title: \"Membros\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Members\");\n            }\n          })]\n        }), whatIsOffice === \"administrador\" && _jsxs(S.ContentOptions, {\n          children: [_jsx(SelectedMenuComponent, {\n            icon: _jsx(S.ReportView, {\n              name: \"copy\"\n            }),\n            title: \"Ver Relat\\xF3rios Entregues\",\n            onPress: function onPress() {\n              return clean(\"SeeReports\");\n            }\n          }), _jsx(SelectedMenuComponent, {\n            icon: _jsx(S.MultiplicationIcon, {\n              name: \"multiplication\"\n            }),\n            title: \"Multiplica\\xE7\\xE3o\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Multiplication\");\n            }\n          })]\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Fragment","useNavigation","useFormReport","FormReportActions","LogoComponent","TitleComponent","HeaderComponent","SelectedMenuComponent","loadingGif","require","useAuth","useUserFiltered","S","HomeScreen","signOut","loading","user","navigation","dataUser","whatIsOffice","cargo","dispatch","clean","page","navigate","type","setRedeSelect","payload","setDiscipuladoSelect","setCelulaSelect","setOffer","setTextDate","setPresencaCulto","setPresencaCelula","setDate","Date","office","nome","numero_celula","rede"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/Home/index.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { FormReportActions } from \"../../contexts/FormReport\";\r\nimport { LogoComponent } from \"../../components/Logo\";\r\nimport { TitleComponent } from \"../../components/Title\";\r\nimport { HeaderComponent } from \"../../components/Header\";\r\n// import { NotificationComponent } from \"../../components/Notification\";\r\nimport { SelectedMenuComponent } from \"../../components/SelectedMenu\";\r\n\r\nconst loadingGif = require(\"../../assets/loader-two.gif\");\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\r\n\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nexport function HomeScreen() {\r\n  const { signOut } = useAuth();\r\n  const { loading, user } = useUserFiltered();\r\n  const navigation = useNavigation<IPropsAppStack>();\r\n\r\n  const dataUser = user && user[0] && user[0][1];\r\n  const whatIsOffice = dataUser && dataUser.cargo;\r\n\r\n  const { dispatch } = useFormReport();\r\n  const clean = (page: string) => {\r\n    navigation.navigate(page);\r\n    dispatch({\r\n      type: FormReportActions.setRedeSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setOffer,\r\n      payload: \"\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setTextDate,\r\n      payload: \"Selecione uma data\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setPresencaCulto,\r\n      payload: [],\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setPresencaCelula,\r\n      payload: [],\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDate,\r\n      payload: new Date(),\r\n    });\r\n  };\r\n\r\n  const office = () => {\r\n    switch (whatIsOffice) {\r\n      case \"lider\":\r\n        return <S.Office>Lider de Célula</S.Office>;\r\n\r\n      case \"discipulador\":\r\n        return <TitleComponent title=\"Discipulador\" decoration red />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <HeaderComponent>\r\n        <LogoComponent full />\r\n        <S.Buttons>\r\n          <TouchableOpacity onPress={signOut}>\r\n            <S.Material name=\"logout\" size={24} />\r\n          </TouchableOpacity>\r\n        </S.Buttons>\r\n      </HeaderComponent>\r\n\r\n      {loading ? (\r\n        <S.Loading source={loadingGif} />\r\n      ) : (\r\n        <S.Content>\r\n          {dataUser && (\r\n            <Fragment>\r\n              <S.Names>\r\n                <S.Name>{dataUser.nome}</S.Name>\r\n\r\n                {office()}\r\n              </S.Names>\r\n\r\n              {whatIsOffice === \"lider\" && (\r\n                <S.Info>\r\n                  <S.InfoTextTitle>Célula</S.InfoTextTitle>\r\n\r\n                  <S.InfoTextSubtitle>{`${dataUser.numero_celula} - ${dataUser.rede}`}</S.InfoTextSubtitle>\r\n                </S.Info>\r\n              )}\r\n\r\n              <S.ContentOptions>\r\n                <SelectedMenuComponent\r\n                  icon={<S.SendReportIcon name=\"document-text-sharp\" />}\r\n                  title=\"Entregar Relatório\"\r\n                  onPress={() => clean(\"SendReport\")}\r\n                />\r\n\r\n                {whatIsOffice === \"administrador\" ? (\r\n                  <SelectedMenuComponent\r\n                    icon={<S.Material name=\"add\" size={40} />}\r\n                    title=\"Cadastro\"\r\n                    onPress={() => navigation.navigate(\"PreRegisterAdmin\")}\r\n                  />\r\n                ) : (\r\n                  <SelectedMenuComponent\r\n                    icon={<S.RegisterIcon name=\"user-plus\" />}\r\n                    title=\"Cadastrar\"\r\n                    onPress={() => navigation.navigate(\"Register\")}\r\n                  />\r\n                )}\r\n\r\n                {whatIsOffice === \"administrador\" ? (\r\n                  <SelectedMenuComponent\r\n                    icon={<S.Material name=\"format-list-bulleted\" size={40} />}\r\n                    title=\"Listagem\"\r\n                    onPress={() => navigation.navigate(\"PreListAdmin\")}\r\n                  />\r\n                ) : (\r\n                  <SelectedMenuComponent\r\n                    icon={<S.MembersIcon name=\"user-friends\" />}\r\n                    title=\"Membros\"\r\n                    onPress={() => navigation.navigate(\"Members\")}\r\n                  />\r\n                )}\r\n              </S.ContentOptions>\r\n\r\n              {whatIsOffice === \"administrador\" && (\r\n                <S.ContentOptions>\r\n                  <SelectedMenuComponent\r\n                    icon={<S.ReportView name=\"copy\" />}\r\n                    title=\"Ver Relatórios Entregues\"\r\n                    onPress={() => clean(\"SeeReports\")}\r\n                  />\r\n                  <SelectedMenuComponent\r\n                    icon={<S.MultiplicationIcon name=\"multiplication\" />}\r\n                    title=\"Multiplicação\"\r\n                    onPress={() => navigation.navigate(\"Multiplication\")}\r\n                  />\r\n                </S.ContentOptions>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </S.Content>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,aAAT;AACA,SAASC,iBAAT;AACA,SAASC,aAAT;AACA,SAASC,cAAT;AACA,SAASC,eAAT;AAEA,SAASC,qBAAT;;AAEA,IAAMC,UAAU,GAAGC,OAAO,+BAA1B;;AAEA,SAASC,OAAT;AACA,OAAOC,eAAP;AAIA,OAAO,KAAKC,CAAZ;;;AAEA,OAAO,SAASC,UAAT,GAAsB;EAC3B,eAAoBH,OAAO,EAA3B;EAAA,IAAQI,OAAR,YAAQA,OAAR;;EACA,uBAA0BH,eAAe,EAAzC;EAAA,IAAQI,OAAR,oBAAQA,OAAR;EAAA,IAAiBC,IAAjB,oBAAiBA,IAAjB;;EACA,IAAMC,UAAU,GAAGhB,aAAa,EAAhC;EAEA,IAAMiB,QAAQ,GAAGF,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAApC;EACA,IAAMG,YAAY,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,KAA1C;;EAEA,qBAAqBlB,aAAa,EAAlC;EAAA,IAAQmB,QAAR,kBAAQA,QAAR;;EACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAkB;IAC9BN,UAAU,CAACO,QAAX,CAAoBD,IAApB;IACAF,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAACuB,aADjB;MAEPC,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAACyB,oBADjB;MAEPD,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC0B,eADjB;MAEPF,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC2B,QADjB;MAEPH,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC4B,WADjB;MAEPJ,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC6B,gBADjB;MAEPL,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC8B,iBADjB;MAEPN,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAN,QAAQ,CAAC;MACPI,IAAI,EAAEtB,iBAAiB,CAAC+B,OADjB;MAEPP,OAAO,EAAE,IAAIQ,IAAJ;IAFF,CAAD,CAAR;EAID,CAlCD;;EAoCA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;IACnB,QAAQjB,YAAR;MACE,KAAK,OAAL;QACE,OAAO,KAAC,CAAD,CAAG,MAAH;UAAA;QAAA,EAAP;;MAEF,KAAK,cAAL;QACE,OAAO,KAAC,cAAD;UAAgB,KAAK,EAAC,cAAtB;UAAqC,UAAU,MAA/C;UAAgD,GAAG;QAAnD,EAAP;IALJ;EAOD,CARD;;EAUA,OACE,MAAC,QAAD;IAAA,WACE,MAAC,eAAD;MAAA,WACE,KAAC,aAAD;QAAe,IAAI;MAAnB,EADF,EAEE,KAAC,CAAD,CAAG,OAAH;QAAA,UACE,KAAC,gBAAD;UAAkB,OAAO,EAAEL,OAA3B;UAAA,UACE,KAAC,CAAD,CAAG,QAAH;YAAY,IAAI,EAAC,QAAjB;YAA0B,IAAI,EAAE;UAAhC;QADF;MADF,EAFF;IAAA,EADF,EAUGC,OAAO,GACN,KAAC,CAAD,CAAG,OAAH;MAAW,MAAM,EAAEP;IAAnB,EADM,GAGN,KAAC,CAAD,CAAG,OAAH;MAAA,UACGU,QAAQ,IACP,MAAC,QAAD;QAAA,WACE,MAAC,CAAD,CAAG,KAAH;UAAA,WACE,KAAC,CAAD,CAAG,IAAH;YAAA,UAASA,QAAQ,CAACmB;UAAlB,EADF,EAGGD,MAAM,EAHT;QAAA,EADF,EAOGjB,YAAY,KAAK,OAAjB,IACC,MAAC,CAAD,CAAG,IAAH;UAAA,WACE,KAAC,CAAD,CAAG,aAAH;YAAA;UAAA,EADF,EAGE,KAAC,CAAD,CAAG,gBAAH;YAAA,UAAwBD,QAAQ,CAACoB,aAAjC,WAAoDpB,QAAQ,CAACqB;UAA7D,EAHF;QAAA,EARJ,EAeE,MAAC,CAAD,CAAG,cAAH;UAAA,WACE,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,cAAH;cAAkB,IAAI,EAAC;YAAvB,EADR;YAEE,KAAK,EAAC,uBAFR;YAGE,OAAO,EAAE;cAAA,OAAMjB,KAAK,CAAC,YAAD,CAAX;YAAA;UAHX,EADF,EAOGH,YAAY,KAAK,eAAjB,GACC,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,QAAH;cAAY,IAAI,EAAC,KAAjB;cAAuB,IAAI,EAAE;YAA7B,EADR;YAEE,KAAK,EAAC,UAFR;YAGE,OAAO,EAAE;cAAA,OAAMF,UAAU,CAACO,QAAX,CAAoB,kBAApB,CAAN;YAAA;UAHX,EADD,GAOC,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,YAAH;cAAgB,IAAI,EAAC;YAArB,EADR;YAEE,KAAK,EAAC,WAFR;YAGE,OAAO,EAAE;cAAA,OAAMP,UAAU,CAACO,QAAX,CAAoB,UAApB,CAAN;YAAA;UAHX,EAdJ,EAqBGL,YAAY,KAAK,eAAjB,GACC,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,QAAH;cAAY,IAAI,EAAC,sBAAjB;cAAwC,IAAI,EAAE;YAA9C,EADR;YAEE,KAAK,EAAC,UAFR;YAGE,OAAO,EAAE;cAAA,OAAMF,UAAU,CAACO,QAAX,CAAoB,cAApB,CAAN;YAAA;UAHX,EADD,GAOC,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,WAAH;cAAe,IAAI,EAAC;YAApB,EADR;YAEE,KAAK,EAAC,SAFR;YAGE,OAAO,EAAE;cAAA,OAAMP,UAAU,CAACO,QAAX,CAAoB,SAApB,CAAN;YAAA;UAHX,EA5BJ;QAAA,EAfF,EAmDGL,YAAY,KAAK,eAAjB,IACC,MAAC,CAAD,CAAG,cAAH;UAAA,WACE,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,UAAH;cAAc,IAAI,EAAC;YAAnB,EADR;YAEE,KAAK,EAAC,6BAFR;YAGE,OAAO,EAAE;cAAA,OAAMG,KAAK,CAAC,YAAD,CAAX;YAAA;UAHX,EADF,EAME,KAAC,qBAAD;YACE,IAAI,EAAE,KAAC,CAAD,CAAG,kBAAH;cAAsB,IAAI,EAAC;YAA3B,EADR;YAEE,KAAK,EAAC,qBAFR;YAGE,OAAO,EAAE;cAAA,OAAML,UAAU,CAACO,QAAX,CAAoB,gBAApB,CAAN;YAAA;UAHX,EANF;QAAA,EApDJ;MAAA;IAFJ,EAbJ;EAAA,EADF;AAuFD"},"metadata":{},"sourceType":"module"}