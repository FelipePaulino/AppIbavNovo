{"ast":null,"code":"import React, { Fragment } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { LogoComponent } from \"../../components/Logo\";\nimport { TitleComponent } from \"../../components/Title\";\nimport { HeaderComponent } from \"../../components/Header\";\nimport { ComeBackComponent } from \"../../components/ComeBack\";\nimport { SelectedMenuComponent } from \"../../components/SelectedMenu\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { FormReportActions } from \"../../contexts/FormReport\";\nimport * as S from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function PreRegisterAdminScreen() {\n  var _useFormReport = useFormReport(),\n      dispatch = _useFormReport.dispatch;\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var navigation = useNavigation();\n\n  var clean = function clean(value) {\n    navigation.navigate(value);\n    dispatch({\n      type: FormReportActions.setRedeSelect,\n      payload: \"Selecione\"\n    });\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: \"Selecione\"\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: \"Selecione\"\n    });\n  };\n\n  return _jsxs(Fragment, {\n    children: [_jsxs(HeaderComponent, {\n      children: [_jsxs(S.HeadingIcons, {\n        children: [_jsx(ComeBackComponent, {}), _jsx(LogoComponent, {\n          full: true\n        })]\n      }), _jsx(S.Buttons, {\n        children: _jsx(TouchableOpacity, {\n          onPress: signOut,\n          children: _jsx(S.Logout, {\n            name: \"logout\"\n          })\n        })\n      })]\n    }), _jsxs(S.Content, {\n      children: [_jsx(S.Names, {\n        children: _jsx(TitleComponent, {\n          title: \"Cadastro\",\n          medium: true,\n          uppercase: true,\n          primary: true,\n          weight: true\n        })\n      }), _jsxs(S.ContentOptions, {\n        children: [_jsx(SelectedMenuComponent, {\n          icon: _jsx(S.RegisterIcon, {\n            name: \"user-plus\"\n          }),\n          title: \"Membros/Visitante\",\n          onPress: function onPress() {\n            return clean('Register');\n          }\n        }), _jsx(SelectedMenuComponent, {\n          icon: _jsx(S.UserGridIcon, {\n            name: \"network-wired\"\n          }),\n          title: \"Usu\\xE1rio/Rede\",\n          onPress: function onPress() {\n            return navigation.navigate(\"UserRegister\");\n          }\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","Fragment","useNavigation","LogoComponent","TitleComponent","HeaderComponent","ComeBackComponent","SelectedMenuComponent","useAuth","useFormReport","FormReportActions","S","PreRegisterAdminScreen","dispatch","signOut","navigation","clean","value","navigate","type","setRedeSelect","payload","setDiscipuladoSelect","setCelulaSelect"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/PreRegisterAdmin/index.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport { LogoComponent } from \"../../components/Logo\";\r\nimport { TitleComponent } from \"../../components/Title\";\r\nimport { HeaderComponent } from \"../../components/Header\";\r\nimport { ComeBackComponent } from \"../../components/ComeBack\";\r\nimport { SelectedMenuComponent } from \"../../components/SelectedMenu\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\nimport { FormReportActions } from \"../../contexts/FormReport\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nexport function PreRegisterAdminScreen() {\r\n  const { dispatch } = useFormReport();\r\n  const { signOut } = useAuth();\r\n  const navigation = useNavigation<IPropsAppStack>();\r\n\r\n  const clean = (value: string) => {\r\n    navigation.navigate(value);\r\n    dispatch({\r\n      type: FormReportActions.setRedeSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: \"Selecione\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <HeaderComponent>\r\n        <S.HeadingIcons>\r\n          <ComeBackComponent />\r\n          <LogoComponent full />\r\n        </S.HeadingIcons>\r\n\r\n        <S.Buttons>\r\n          <TouchableOpacity onPress={signOut}>\r\n            <S.Logout name=\"logout\" />\r\n          </TouchableOpacity>\r\n        </S.Buttons>\r\n      </HeaderComponent>\r\n\r\n      <S.Content>\r\n        <S.Names>\r\n          <TitleComponent title=\"Cadastro\" medium uppercase primary weight />\r\n        </S.Names>\r\n\r\n        <S.ContentOptions>\r\n          <SelectedMenuComponent\r\n            icon={<S.RegisterIcon name=\"user-plus\" />}\r\n            title=\"Membros/Visitante\"\r\n            onPress={() => clean('Register')}\r\n          />\r\n          <SelectedMenuComponent\r\n            icon={<S.UserGridIcon name=\"network-wired\" />}\r\n            title=\"UsuÃ¡rio/Rede\"\r\n            onPress={() => navigation.navigate(\"UserRegister\")}\r\n          />\r\n        </S.ContentOptions>\r\n      </S.Content>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,aAAT;AACA,SAASC,cAAT;AACA,SAASC,eAAT;AACA,SAASC,iBAAT;AACA,SAASC,qBAAT;AAEA,SAASC,OAAT;AACA,SAASC,aAAT;AAEA,SAASC,iBAAT;AAEA,OAAO,KAAKC,CAAZ;;;AAEA,OAAO,SAASC,sBAAT,GAAkC;EACvC,qBAAqBH,aAAa,EAAlC;EAAA,IAAQI,QAAR,kBAAQA,QAAR;;EACA,eAAoBL,OAAO,EAA3B;EAAA,IAAQM,OAAR,YAAQA,OAAR;;EACA,IAAMC,UAAU,GAAGb,aAAa,EAAhC;;EAEA,IAAMc,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAmB;IAC/BF,UAAU,CAACG,QAAX,CAAoBD,KAApB;IACAJ,QAAQ,CAAC;MACPM,IAAI,EAAET,iBAAiB,CAACU,aADjB;MAEPC,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAR,QAAQ,CAAC;MACPM,IAAI,EAAET,iBAAiB,CAACY,oBADjB;MAEPD,OAAO,EAAE;IAFF,CAAD,CAAR;IAIAR,QAAQ,CAAC;MACPM,IAAI,EAAET,iBAAiB,CAACa,eADjB;MAEPF,OAAO,EAAE;IAFF,CAAD,CAAR;EAID,CAdD;;EAgBA,OACE,MAAC,QAAD;IAAA,WACE,MAAC,eAAD;MAAA,WACE,MAAC,CAAD,CAAG,YAAH;QAAA,WACE,KAAC,iBAAD,KADF,EAEE,KAAC,aAAD;UAAe,IAAI;QAAnB,EAFF;MAAA,EADF,EAME,KAAC,CAAD,CAAG,OAAH;QAAA,UACE,KAAC,gBAAD;UAAkB,OAAO,EAAEP,OAA3B;UAAA,UACE,KAAC,CAAD,CAAG,MAAH;YAAU,IAAI,EAAC;UAAf;QADF;MADF,EANF;IAAA,EADF,EAcE,MAAC,CAAD,CAAG,OAAH;MAAA,WACE,KAAC,CAAD,CAAG,KAAH;QAAA,UACE,KAAC,cAAD;UAAgB,KAAK,EAAC,UAAtB;UAAiC,MAAM,MAAvC;UAAwC,SAAS,MAAjD;UAAkD,OAAO,MAAzD;UAA0D,MAAM;QAAhE;MADF,EADF,EAKE,MAAC,CAAD,CAAG,cAAH;QAAA,WACE,KAAC,qBAAD;UACE,IAAI,EAAE,KAAC,CAAD,CAAG,YAAH;YAAgB,IAAI,EAAC;UAArB,EADR;UAEE,KAAK,EAAC,mBAFR;UAGE,OAAO,EAAE;YAAA,OAAME,KAAK,CAAC,UAAD,CAAX;UAAA;QAHX,EADF,EAME,KAAC,qBAAD;UACE,IAAI,EAAE,KAAC,CAAD,CAAG,YAAH;YAAgB,IAAI,EAAC;UAArB,EADR;UAEE,KAAK,EAAC,iBAFR;UAGE,OAAO,EAAE;YAAA,OAAMD,UAAU,CAACG,QAAX,CAAoB,cAApB,CAAN;UAAA;QAHX,EANF;MAAA,EALF;IAAA,EAdF;EAAA,EADF;AAmCD"},"metadata":{},"sourceType":"module"}