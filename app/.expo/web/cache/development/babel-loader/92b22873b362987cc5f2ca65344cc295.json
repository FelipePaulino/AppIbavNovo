{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport FormFields from \"../../common/constants/form\";\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { GetStorage } from \"../../common/constants/storage\";\nimport { connectApi } from \"../../common/services/ConnectApi\";\nimport MenuNavigation from \"../../common/constants/navigation\";\nimport RequestService from \"../../common/services/RequestService\";\nimport { officeMembers, selectCivilStatus, selectState } from \"../../common/utils/selects\";\nimport { DateComponent } from \"../../components/Date\";\nimport { ModalComponent } from \"../../components/Modal\";\nimport { HeaderComponent } from \"../../components/Header\";\nimport { SelectComponent } from \"../../components/Select\";\nimport { ButtonComponent } from \"../../components/Button\";\nimport { ComeBackComponent } from \"../../components/ComeBack\";\nimport { InputFieldComponent } from \"../../components/InputField\";\nimport { DefaultContentModalComponent } from \"../../components/Modal/Default\";\nimport * as S from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function UsersInformationScreen(_ref) {\n  var _route$params, _route$params2, _route$params3, _route$params4, _route$params5, _route$params6, _route$params7, _route$params8, _route$params9, _route$params10, _route$params11, _route$params12;\n\n  var route = _ref.route;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      celulas = _useState4[0],\n      setCelulas = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      members = _useState6[0],\n      setMembers = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      successModal = _useState8[0],\n      setSuccessModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showCalender = _useState10[0],\n      setShowCalender = _useState10[1];\n\n  var _useState11 = useState(((_route$params = route.params) == null ? void 0 : _route$params.id) || \"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      id = _useState12[0],\n      setId = _useState12[1];\n\n  var _useState13 = useState(((_route$params2 = route.params) == null ? void 0 : _route$params2.cep) || \"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cep = _useState14[0],\n      setCep = _useState14[1];\n\n  var _useState15 = useState(((_route$params3 = route.params) == null ? void 0 : _route$params3.nome) || \"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      name = _useState16[0],\n      setName = _useState16[1];\n\n  var _useState17 = useState(((_route$params4 = route.params) == null ? void 0 : _route$params4.cidade) || \"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      city = _useState18[0],\n      setCity = _useState18[1];\n\n  var _useState19 = useState(((_route$params5 = route.params) == null ? void 0 : _route$params5.email) || \"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      email = _useState20[0],\n      setEmail = _useState20[1];\n\n  var _useState21 = useState(((_route$params6 = route.params) == null ? void 0 : _route$params6.estado) || \"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      state = _useState22[0],\n      setState = _useState22[1];\n\n  var _useState23 = useState(((_route$params7 = route.params) == null ? void 0 : _route$params7.status) || \"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      status = _useState24[0],\n      setStatus = _useState24[1];\n\n  var _useState25 = useState(((_route$params8 = route.params) == null ? void 0 : _route$params8.telefone) || \"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      phone = _useState26[0],\n      setPhone = _useState26[1];\n\n  var _useState27 = useState(((_route$params9 = route.params) == null ? void 0 : _route$params9.endereco) || \"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      address = _useState28[0],\n      setAddress = _useState28[1];\n\n  var _useState29 = useState(((_route$params10 = route.params) == null ? void 0 : _route$params10.bairro) || \"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      district = _useState30[0],\n      setDistrict = _useState30[1];\n\n  var _useState31 = useState(((_route$params11 = route.params) == null ? void 0 : _route$params11.data_de_nascimento) || \"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      birthday = _useState32[0],\n      setBirthday = _useState32[1];\n\n  var _useState33 = useState(((_route$params12 = route.params) == null ? void 0 : _route$params12.estado_civil) || \"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      civilStatus = _useState34[0],\n      setCivilStatus = _useState34[1];\n\n  var _useUserFiltered = useUserFiltered(),\n      user = _useUserFiltered.user;\n\n  var _useFormReport = useFormReport(),\n      trigger = _useFormReport.trigger,\n      setTrigger = _useFormReport.setTrigger;\n\n  var identifyCelula = user && user[0][1].numero_celula;\n  var serviceGet = new RequestService();\n  var navigation = useNavigation();\n  useEffect(function () {\n    var getCelulas = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        yield serviceGet.getCelulas().then(function (response) {\n          setCelulas(Object.entries(response));\n        });\n      });\n\n      return function getCelulas() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getCelulas();\n  }, []);\n  useEffect(function () {\n    var filterMembers = celulas && celulas.filter(function (item) {\n      return item[1].numero_celula == identifyCelula;\n    });\n\n    if (filterMembers) {\n      setMembers(filterMembers);\n      AsyncStorage.setItem(GetStorage.MEMBERS_FILTERED, JSON.stringify(filterMembers));\n    }\n  }, [identifyCelula, celulas]);\n\n  var showMode = function showMode() {\n    setShowCalender(true);\n  };\n\n  var handleDateChange = function handleDateChange(event, selectedDate) {\n    var currentDate = selectedDate || state.dateRegister;\n    setShowCalender(false);\n    var tempDate = new Date(currentDate);\n    var newDate = tempDate.getDate() + \"/\" + (tempDate.getMonth() + 1) + \"/\" + tempDate.getFullYear();\n    setDate(currentDate);\n    setBirthday(newDate);\n  };\n\n  var handleOpenModal = function handleOpenModal() {\n    setSuccessModal(true);\n  };\n\n  var submitRegister = function submitRegister() {\n    try {\n      connectApi.put(\"/users/\" + id + \".json\", {\n        nome: name,\n        status: status,\n        telefone: phone,\n        email: email,\n        endereco: address,\n        cep: cep,\n        bairro: district,\n        cidade: city,\n        estado: state,\n        data_de_nascimento: birthday,\n        estado_civil: civilStatus\n      });\n      setTrigger(!trigger);\n      handleOpenModal();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(HeaderComponent, {\n      children: [_jsx(ComeBackComponent, {}), _jsx(S.Navigation, {\n        children: MenuNavigation.USERS\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsxs(S.Container, {\n        children: [_jsxs(S.Form, {\n          children: [_jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: name === \"undefined\" ? FormFields.FULL_NAME : name,\n              placeholder: \"* \" + FormFields.FULL_NAME,\n              onChangeText: function onChangeText(value) {\n                return setName(value);\n              },\n              label: \"*Nome Completo\"\n            })\n          }), _jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: phone === \"undefined\" ? FormFields.PHONE : phone,\n              placeholder: \"* \" + FormFields.PHONE,\n              onChangeText: function onChangeText(value) {\n                return setPhone(value);\n              },\n              label: \"*Telefone\"\n            })\n          }), _jsx(S.GridItemFull, {\n            children: _jsx(InputFieldComponent, {\n              primary: true,\n              value: email === \"undefined\" ? FormFields.EMAIL : email,\n              placeholder: FormFields.EMAIL,\n              onChangeText: function onChangeText(value) {\n                return setEmail(value);\n              },\n              label: \"*Email\"\n            })\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: address && address,\n                placeholder: FormFields.ADDRESS,\n                onChangeText: function onChangeText(value) {\n                  return setAddress(value);\n                },\n                label: \"Endere\\xE7o\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: cep === \"undefined\" ? FormFields.CEP : cep,\n                placeholder: FormFields.CEP,\n                onChangeText: function onChangeText(value) {\n                  return setCep(value);\n                },\n                label: \"Cep\"\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: district === \"undefined\" ? FormFields.DISTRICT : district,\n                placeholder: FormFields.DISTRICT,\n                onChangeText: function onChangeText(value) {\n                  return setDistrict(value);\n                },\n                label: \"Bairro\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(InputFieldComponent, {\n                primary: true,\n                value: city === \"undefined\" ? FormFields.CITY : city,\n                placeholder: FormFields.CITY,\n                onChangeText: function onChangeText(value) {\n                  return setCity(value);\n                },\n                label: \"Cidade\"\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Estado\",\n                onChange: function onChange(labelSelect) {\n                  return setState(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setState(labelSelect);\n                },\n                labelSelect: state === \"undefined\" ? FormFields.STATE : state,\n                dataOptions: selectState\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Estado Civil\",\n                onChange: function onChange(labelSelect) {\n                  return setCivilStatus(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setCivilStatus(labelSelect);\n                },\n                labelSelect: civilStatus === \"undefined\" ? FormFields.CIVIL_STATUS : civilStatus,\n                dataOptions: selectCivilStatus\n              })\n            })]\n          }), _jsxs(S.GridForm, {\n            children: [_jsx(S.GridItem, {\n              children: _jsx(DateComponent, {\n                text: birthday,\n                open: showMode,\n                showCalender: showCalender,\n                dataDados: date,\n                onChange: handleDateChange,\n                label: \"Data de Nascimento\"\n              })\n            }), _jsx(S.GridItem, {\n              children: _jsx(SelectComponent, {\n                label: \"Categoria\",\n                onChange: function onChange(labelSelect) {\n                  return setStatus(labelSelect);\n                },\n                selectedOption: function selectedOption(labelSelect) {\n                  return setStatus(labelSelect);\n                },\n                labelSelect: status === \"undefined\" ? FormFields.CATEGORY : status,\n                dataOptions: officeMembers\n              })\n            })]\n          })]\n        }), _jsxs(S.FooterFields, {\n          children: [_jsx(S.Required, {\n            children: \"* Campos obrigat\\xF3rios\"\n          }), _jsx(ButtonComponent, {\n            title: \"SALVAR INFORMA\\xC7\\xD5ES\",\n            onPress: submitRegister,\n            width: \"213px\",\n            heigth: \"39px\",\n            size: \"14px\"\n          })]\n        })]\n      })\n    }), _jsx(ModalComponent, {\n      isVisible: successModal,\n      onBackdropPress: function onBackdropPress() {\n        setSuccessModal(false);\n        navigation.navigate(\"ListUsers\");\n      },\n      children: _jsx(DefaultContentModalComponent, {\n        data: name,\n        type: \"edited\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useNavigation","AsyncStorage","FormFields","useUserFiltered","useFormReport","GetStorage","connectApi","MenuNavigation","RequestService","officeMembers","selectCivilStatus","selectState","DateComponent","ModalComponent","HeaderComponent","SelectComponent","ButtonComponent","ComeBackComponent","InputFieldComponent","DefaultContentModalComponent","S","UsersInformationScreen","route","Date","date","setDate","celulas","setCelulas","members","setMembers","successModal","setSuccessModal","showCalender","setShowCalender","params","id","setId","cep","setCep","nome","name","setName","cidade","city","setCity","email","setEmail","estado","state","setState","status","setStatus","telefone","phone","setPhone","endereco","address","setAddress","bairro","district","setDistrict","data_de_nascimento","birthday","setBirthday","estado_civil","civilStatus","setCivilStatus","user","trigger","setTrigger","identifyCelula","numero_celula","serviceGet","navigation","getCelulas","then","response","Object","entries","filterMembers","filter","item","setItem","MEMBERS_FILTERED","JSON","stringify","showMode","handleDateChange","event","selectedDate","currentDate","dateRegister","tempDate","newDate","getDate","getMonth","getFullYear","handleOpenModal","submitRegister","put","err","alert","USERS","FULL_NAME","value","PHONE","EMAIL","ADDRESS","CEP","DISTRICT","CITY","labelSelect","STATE","CIVIL_STATUS","CATEGORY","navigate"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/ListInformation/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ScrollView } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport FormFields from \"../../common/constants/form\";\r\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { GetStorage } from \"../../common/constants/storage\";\r\nimport { connectApi } from \"../../common/services/ConnectApi\";\r\nimport MenuNavigation from \"../../common/constants/navigation\";\r\nimport RequestService from \"../../common/services/RequestService\";\r\nimport {\r\n  officeMembers,\r\n  selectCivilStatus,\r\n  selectState,\r\n} from \"../../common/utils/selects\";\r\n\r\nimport { DateComponent } from \"../../components/Date\";\r\nimport { ModalComponent } from \"../../components/Modal\";\r\nimport { HeaderComponent } from \"../../components/Header\";\r\nimport { SelectComponent } from \"../../components/Select\";\r\nimport { ButtonComponent } from \"../../components/Button\";\r\nimport { ComeBackComponent } from \"../../components/ComeBack\";\r\nimport { InputFieldComponent } from \"../../components/InputField\";\r\n// import { NotificationComponent } from \"../../components/Notification\";\r\nimport { DefaultContentModalComponent } from \"../../components/Modal/Default\";\r\n\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\nimport * as S from \"./styles\";\r\n\r\nexport function UsersInformationScreen(this: any, { route }: any) {\r\n  const [date, setDate] = useState(new Date());\r\n  const [celulas, setCelulas] = useState<any>();\r\n  const [members, setMembers] = useState<any>([]);\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [showCalender, setShowCalender] = useState(false);\r\n  const [id, setId] = useState(route.params?.id || \"\");\r\n  const [cep, setCep] = useState(route.params?.cep || \"\");\r\n  const [name, setName] = useState(route.params?.nome || \"\");\r\n  const [city, setCity] = useState(route.params?.cidade || \"\");\r\n  const [email, setEmail] = useState(route.params?.email || \"\");\r\n  const [state, setState] = useState(route.params?.estado || \"\");\r\n  const [status, setStatus] = useState(route.params?.status || \"\");\r\n  const [phone, setPhone] = useState(route.params?.telefone || \"\");\r\n  const [address, setAddress] = useState(route.params?.endereco || \"\");\r\n  const [district, setDistrict] = useState(route.params?.bairro || \"\");\r\n  const [birthday, setBirthday] = useState(\r\n    route.params?.data_de_nascimento || \"\"\r\n  );\r\n  const [civilStatus, setCivilStatus] = useState(\r\n    route.params?.estado_civil || \"\"\r\n  );\r\n\r\n  const { user } = useUserFiltered();\r\n  const { trigger, setTrigger } = useFormReport();\r\n\r\n  const identifyCelula = user && user[0][1].numero_celula;\r\n  const serviceGet = new RequestService();\r\n  const navigation = useNavigation<IPropsAppStack>();\r\n\r\n  useEffect(() => {\r\n    const getCelulas = async () => {\r\n      await serviceGet.getCelulas().then((response) => {\r\n        setCelulas(Object.entries(response));\r\n      });\r\n    };\r\n\r\n    getCelulas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filterMembers =\r\n      celulas &&\r\n      celulas.filter((item: any) => {\r\n        return item[1].numero_celula == identifyCelula;\r\n      });\r\n\r\n    if (filterMembers) {\r\n      setMembers(filterMembers);\r\n      AsyncStorage.setItem(\r\n        GetStorage.MEMBERS_FILTERED,\r\n        JSON.stringify(filterMembers)\r\n      );\r\n    }\r\n  }, [identifyCelula, celulas]);\r\n\r\n  const showMode = () => {\r\n    setShowCalender(true);\r\n  };\r\n\r\n  const handleDateChange = (event: Event, selectedDate: any) => {\r\n    const currentDate = selectedDate || state.dateRegister;\r\n\r\n    setShowCalender(false);\r\n\r\n    const tempDate = new Date(currentDate);\r\n    const newDate =\r\n      tempDate.getDate() +\r\n      \"/\" +\r\n      (tempDate.getMonth() + 1) +\r\n      \"/\" +\r\n      tempDate.getFullYear();\r\n\r\n    setDate(currentDate);\r\n    setBirthday(newDate);\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setSuccessModal(true);\r\n  };\r\n\r\n  const submitRegister = () => {\r\n    try {\r\n      connectApi.put(`/users/${id}.json`, {\r\n        nome: name,\r\n        status: status,\r\n        telefone: phone,\r\n        email: email,\r\n        endereco: address,\r\n        cep: cep,\r\n        bairro: district,\r\n        cidade: city,\r\n        estado: state,\r\n        data_de_nascimento: birthday,\r\n        estado_civil: civilStatus,\r\n      });\r\n      setTrigger(!trigger);\r\n      handleOpenModal()\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderComponent>\r\n        <ComeBackComponent />\r\n        <S.Navigation>{MenuNavigation.USERS}</S.Navigation>\r\n        {/* <NotificationComponent /> */}\r\n      </HeaderComponent>\r\n\r\n      <ScrollView>\r\n        <S.Container>\r\n          <S.Form>\r\n            <S.GridItemFull>\r\n              <InputFieldComponent\r\n                primary\r\n                value={name === \"undefined\" ? FormFields.FULL_NAME : name}\r\n                placeholder={`* ${FormFields.FULL_NAME}`}\r\n                onChangeText={(value) => setName(value)}\r\n                label=\"*Nome Completo\"\r\n              />\r\n            </S.GridItemFull>\r\n\r\n            <S.GridItemFull>\r\n              <InputFieldComponent\r\n                primary\r\n                value={phone === \"undefined\" ? FormFields.PHONE : phone}\r\n                placeholder={`* ${FormFields.PHONE}`}\r\n                onChangeText={(value) => setPhone(value)}\r\n                label=\"*Telefone\"\r\n              />\r\n            </S.GridItemFull>\r\n\r\n            <S.GridItemFull>\r\n              <InputFieldComponent\r\n                primary\r\n                value={email === \"undefined\" ? FormFields.EMAIL : email}\r\n                placeholder={FormFields.EMAIL}\r\n                onChangeText={(value) => setEmail(value)}\r\n                label=\"*Email\"\r\n              />\r\n            </S.GridItemFull>\r\n\r\n            <S.GridForm>\r\n              <S.GridItem>\r\n                <InputFieldComponent\r\n                  primary\r\n                  value={address && address}\r\n                  placeholder={FormFields.ADDRESS}\r\n                  onChangeText={(value) => setAddress(value)}\r\n                  label=\"Endereço\"\r\n                />\r\n              </S.GridItem>\r\n\r\n              <S.GridItem>\r\n                <InputFieldComponent\r\n                  primary\r\n                  value={cep === \"undefined\" ? FormFields.CEP : cep}\r\n                  placeholder={FormFields.CEP}\r\n                  onChangeText={(value) => setCep(value)}\r\n                  label=\"Cep\"\r\n                />\r\n              </S.GridItem>\r\n            </S.GridForm>\r\n\r\n            <S.GridForm>\r\n              <S.GridItem>\r\n                <InputFieldComponent\r\n                  primary\r\n                  value={\r\n                    district === \"undefined\" ? FormFields.DISTRICT : district\r\n                  }\r\n                  placeholder={FormFields.DISTRICT}\r\n                  onChangeText={(value) => setDistrict(value)}\r\n                  label=\"Bairro\"\r\n                />\r\n              </S.GridItem>\r\n\r\n              <S.GridItem>\r\n                <InputFieldComponent\r\n                  primary\r\n                  value={city === \"undefined\" ? FormFields.CITY : city}\r\n                  placeholder={FormFields.CITY}\r\n                  onChangeText={(value) => setCity(value)}\r\n                  label=\"Cidade\"\r\n                />\r\n              </S.GridItem>\r\n            </S.GridForm>\r\n\r\n            <S.GridForm>\r\n              <S.GridItem>\r\n                <SelectComponent\r\n                  label=\"Estado\"\r\n                  onChange={(labelSelect) => setState(labelSelect)}\r\n                  selectedOption={(labelSelect) => setState(labelSelect)}\r\n                  labelSelect={state === \"undefined\" ? FormFields.STATE : state}\r\n                  dataOptions={selectState}\r\n                />\r\n              </S.GridItem>\r\n\r\n              <S.GridItem>\r\n                <SelectComponent\r\n                  label=\"Estado Civil\"\r\n                  onChange={(labelSelect) => setCivilStatus(labelSelect)}\r\n                  selectedOption={(labelSelect) => setCivilStatus(labelSelect)}\r\n                  labelSelect={\r\n                    civilStatus === \"undefined\"\r\n                      ? FormFields.CIVIL_STATUS\r\n                      : civilStatus\r\n                  }\r\n                  dataOptions={selectCivilStatus}\r\n                />\r\n              </S.GridItem>\r\n            </S.GridForm>\r\n\r\n            <S.GridForm>\r\n              <S.GridItem>\r\n                <DateComponent\r\n                  text={birthday}\r\n                  open={showMode}\r\n                  showCalender={showCalender}\r\n                  dataDados={date}\r\n                  onChange={handleDateChange}\r\n                  label=\"Data de Nascimento\"\r\n                />\r\n              </S.GridItem>\r\n\r\n              <S.GridItem>\r\n                <SelectComponent\r\n                  label=\"Categoria\"\r\n                  onChange={(labelSelect) => setStatus(labelSelect)}\r\n                  selectedOption={(labelSelect) => setStatus(labelSelect)}\r\n                  labelSelect={\r\n                    status === \"undefined\" ? FormFields.CATEGORY : status\r\n                  }\r\n                  dataOptions={officeMembers}\r\n                />\r\n              </S.GridItem>\r\n            </S.GridForm>\r\n          </S.Form>\r\n\r\n          <S.FooterFields>\r\n            <S.Required>* Campos obrigatórios</S.Required>\r\n            <ButtonComponent\r\n              title=\"SALVAR INFORMAÇÕES\"\r\n              onPress={submitRegister}\r\n              width=\"213px\"\r\n              heigth=\"39px\"\r\n              size=\"14px\"\r\n            />\r\n          </S.FooterFields>\r\n        </S.Container>\r\n      </ScrollView>\r\n\r\n      <ModalComponent\r\n        isVisible={successModal}\r\n        onBackdropPress={() => {\r\n          setSuccessModal(false)\r\n          navigation.navigate(\"ListUsers\")\r\n        }}\r\n      >\r\n        <DefaultContentModalComponent\r\n          data={name}\r\n          type=\"edited\"\r\n        />\r\n      </ModalComponent>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}