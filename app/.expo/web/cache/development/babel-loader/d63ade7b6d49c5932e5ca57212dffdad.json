{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-modal\";\nimport { ContentSelect } from \"./Content\";\nimport * as S from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SelectComponent(_ref) {\n  var label = _ref.label,\n      onChange = _ref.onChange,\n      selectedOption = _ref.selectedOption,\n      labelSelect = _ref.labelSelect,\n      dataOptions = _ref.dataOptions,\n      disabled = _ref.disabled,\n      width = _ref.width,\n      small = _ref.small,\n      allOptions = _ref.allOptions;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setIsModalVisible = _useState2[1];\n\n  var changeModalVisibility = function changeModalVisibility(prev) {\n    if (!disabled) {\n      setIsModalVisible(prev);\n    }\n  };\n\n  return _jsxs(S.Content, {\n    children: [_jsx(S.LabelField, {\n      children: label\n    }), _jsxs(S.Container, {\n      onPress: function onPress() {\n        return changeModalVisibility(true);\n      },\n      small: small,\n      width: width,\n      children: [_jsx(S.Field, {\n        children: _jsx(S.Label, {\n          numberOfLines: 1,\n          children: labelSelect\n        })\n      }), _jsx(S.Icons, {\n        disabled: disabled,\n        children: isModalVisible ? _jsx(S.Icon, {\n          name: \"arrow-drop-up\"\n        }) : _jsx(S.Icon, {\n          name: \"arrow-drop-down\"\n        })\n      })]\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      onBackdropPress: function onBackdropPress() {\n        return changeModalVisibility(false);\n      },\n      children: _jsx(ContentSelect, {\n        alloption: allOptions,\n        changeModalVisibility: changeModalVisibility,\n        selectedOption: selectedOption,\n        onChange: onChange,\n        dataOptions: dataOptions\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Modal","ContentSelect","S","SelectComponent","label","onChange","selectedOption","labelSelect","dataOptions","disabled","width","small","allOptions","isModalVisible","setIsModalVisible","changeModalVisibility","prev"],"sources":["C:/Users/felip/AppIbavNovo/app/src/components/Select/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-native-modal\";\r\nimport { ContentSelect } from \"./Content\";\r\n\r\nimport { IContentProps } from \"./types\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nexport function SelectComponent({\r\n  label,\r\n  onChange,\r\n  selectedOption,\r\n  labelSelect,\r\n  dataOptions,\r\n  disabled,\r\n  width,\r\n  small,\r\n  allOptions,\r\n}: IContentProps) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const changeModalVisibility = (prev: boolean) => {\r\n    if (!disabled) {\r\n      setIsModalVisible(prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.Content>\r\n      <S.LabelField>{label}</S.LabelField>\r\n      <S.Container\r\n        onPress={() => changeModalVisibility(true)}\r\n        small={small}\r\n        width={width}\r\n      >\r\n        <S.Field>\r\n          <S.Label numberOfLines={1}>{labelSelect}</S.Label>\r\n        </S.Field>\r\n        <S.Icons disabled={disabled}>\r\n          {isModalVisible ? (\r\n            <S.Icon name=\"arrow-drop-up\" />\r\n          ) : (\r\n            <S.Icon name=\"arrow-drop-down\" />\r\n          )}\r\n        </S.Icons>\r\n      </S.Container>\r\n\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        onBackdropPress={() => changeModalVisibility(false)}\r\n      >\r\n        <ContentSelect\r\n          alloption={allOptions}\r\n          changeModalVisibility={changeModalVisibility}\r\n          selectedOption={selectedOption}\r\n          onChange={onChange}\r\n          dataOptions={dataOptions}\r\n        />\r\n      </Modal>\r\n    </S.Content>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAT;AAIA,OAAO,KAAKC,CAAZ;;;AAEA,OAAO,SAASC,eAAT,OAUW;EAAA,IAThBC,KASgB,QAThBA,KASgB;EAAA,IARhBC,QAQgB,QARhBA,QAQgB;EAAA,IAPhBC,cAOgB,QAPhBA,cAOgB;EAAA,IANhBC,WAMgB,QANhBA,WAMgB;EAAA,IALhBC,WAKgB,QALhBA,WAKgB;EAAA,IAJhBC,QAIgB,QAJhBA,QAIgB;EAAA,IAHhBC,KAGgB,QAHhBA,KAGgB;EAAA,IAFhBC,KAEgB,QAFhBA,KAEgB;EAAA,IADhBC,UACgB,QADhBA,UACgB;;EAChB,gBAA4Cb,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAOc,cAAP;EAAA,IAAuBC,iBAAvB;;EAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAmB;IAC/C,IAAI,CAACP,QAAL,EAAe;MACbK,iBAAiB,CAACE,IAAD,CAAjB;IACD;EACF,CAJD;;EAMA,OACE,MAAC,CAAD,CAAG,OAAH;IAAA,WACE,KAAC,CAAD,CAAG,UAAH;MAAA,UAAeZ;IAAf,EADF,EAEE,MAAC,CAAD,CAAG,SAAH;MACE,OAAO,EAAE;QAAA,OAAMW,qBAAqB,CAAC,IAAD,CAA3B;MAAA,CADX;MAEE,KAAK,EAAEJ,KAFT;MAGE,KAAK,EAAED,KAHT;MAAA,WAKE,KAAC,CAAD,CAAG,KAAH;QAAA,UACE,KAAC,CAAD,CAAG,KAAH;UAAS,aAAa,EAAE,CAAxB;UAAA,UAA4BH;QAA5B;MADF,EALF,EAQE,KAAC,CAAD,CAAG,KAAH;QAAS,QAAQ,EAAEE,QAAnB;QAAA,UACGI,cAAc,GACb,KAAC,CAAD,CAAG,IAAH;UAAQ,IAAI,EAAC;QAAb,EADa,GAGb,KAAC,CAAD,CAAG,IAAH;UAAQ,IAAI,EAAC;QAAb;MAJJ,EARF;IAAA,EAFF,EAmBE,KAAC,KAAD;MACE,SAAS,EAAEA,cADb;MAEE,eAAe,EAAE;QAAA,OAAME,qBAAqB,CAAC,KAAD,CAA3B;MAAA,CAFnB;MAAA,UAIE,KAAC,aAAD;QACE,SAAS,EAAEH,UADb;QAEE,qBAAqB,EAAEG,qBAFzB;QAGE,cAAc,EAAET,cAHlB;QAIE,QAAQ,EAAED,QAJZ;QAKE,WAAW,EAAEG;MALf;IAJF,EAnBF;EAAA,EADF;AAkCD"},"metadata":{},"sourceType":"module"}