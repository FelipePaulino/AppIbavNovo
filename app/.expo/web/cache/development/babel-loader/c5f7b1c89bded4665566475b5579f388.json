{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport FormFields from \"../../common/constants/form\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { FormReportActions } from \"../../contexts/FormReport\";\nimport MenuNavigation from \"../../common/constants/navigation\";\nimport RequestService from \"../../common/services/RequestService\";\nimport { TitleComponent } from \"../../components/Title\";\nimport { HeaderComponent } from \"../../components/Header\";\nimport { SelectComponent } from \"../../components/Select\";\nimport { ModalComponent } from \"../../components/Modal\";\nimport { ApprovalRequest } from \"../../components/Modal/ApprovalRequest\";\nimport { RequestContentModalComponent } from \"../../components/Modal/Request\";\nimport { ComeBackComponent } from \"../../components/ComeBack\";\nimport { PersonLabelComponent } from \"../../components/PersonLabel\";\nimport * as S from \"./styles\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar loadingGif = require(\"../../assets/loader-two.gif\");\n\nexport default function NetworkScreenList() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      celulas = _useState4[0],\n      setCelulas = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmModal = _useState10[0],\n      setConfirmModal = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalConcluded = _useState12[0],\n      setModalConcluded = _useState12[1];\n\n  var _useFormReport = useFormReport(),\n      state = _useFormReport.state,\n      dispatch = _useFormReport.dispatch,\n      setTrigger = _useFormReport.setTrigger,\n      trigger = _useFormReport.trigger;\n\n  var service = new RequestService();\n  useEffect(function () {\n    var getUsers = function () {\n      var _ref = _asyncToGenerator(function* () {\n        yield service.getUsers().then(function (response) {\n          setCelulas(response);\n        }).finally(function () {\n          return setLoading(false);\n        });\n      });\n\n      return function getUsers() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getUsers();\n  }, [trigger]);\n\n  var handleRedeChange = function handleRedeChange(value) {\n    dispatch({\n      type: FormReportActions.setRedeSelect,\n      payload: value\n    });\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: null\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: null\n    });\n  };\n\n  var handleDiscipuladoChange = function handleDiscipuladoChange(value) {\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: value\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: null\n    });\n  };\n\n  var rede = celulas && Object.entries(celulas).filter(function (items) {\n    var _items$;\n\n    return ((_items$ = items[1]) == null ? void 0 : _items$.cargo) === \"pastor\";\n  });\n  var discipulado = celulas && Object.entries(celulas).filter(function (items) {\n    var _items$2, _items$3;\n\n    return ((_items$2 = items[1]) == null ? void 0 : _items$2.cargo) === \"discipulador\" && ((_items$3 = items[1]) == null ? void 0 : _items$3.rede) === state.redeSelect;\n  });\n  var lider = celulas && Object.entries(celulas).filter(function (items) {\n    var _items$4, _items$5;\n\n    return ((_items$4 = items[1]) == null ? void 0 : _items$4.cargo) === \"lider\" && ((_items$5 = items[1]) == null ? void 0 : _items$5.discipulado) === state.discipuladoSelect;\n  });\n  var discipuladossUnicos = discipulado.map(function (items) {\n    var _items$6;\n\n    return (_items$6 = items[1]) == null ? void 0 : _items$6.nome;\n  });\n  var mapDiscipuladosUnicos = discipuladossUnicos.map(function (item) {\n    return {\n      value: item\n    };\n  });\n  var redesUnicas = rede.map(function (items) {\n    var _items$7;\n\n    return (_items$7 = items[1]) == null ? void 0 : _items$7.rede;\n  });\n  var mapRedesUnicas = redesUnicas.map(function (item) {\n    return {\n      value: item\n    };\n  });\n\n  var timeModal = function timeModal() {\n    setModalConcluded(true);\n  };\n\n  var deleteMember = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield axios.delete(\"https://app-ibav-f06f4-default-rtdb.firebaseio.com/users/\" + id + \".json\", {});\n        setConfirmModal(false);\n        setTimeout(timeModal, 300);\n        setTrigger(!trigger);\n      } catch (err) {\n        alert(\"Houve algum problema ao excluir esse usuÃ¡rio\");\n      }\n    });\n\n    return function deleteMember() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(Fragment, {\n    children: [_jsx(HeaderComponent, {\n      children: _jsxs(S.ContainerNav, {\n        children: [_jsx(ComeBackComponent, {}), _jsx(S.Navigation, {\n          children: MenuNavigation.NETWORK\n        })]\n      })\n    }), loading ? _jsx(S.Loading, {\n      source: loadingGif\n    }) : _jsx(ScrollView, {\n      children: _jsxs(S.Content, {\n        children: [_jsxs(S.Form, {\n          behavior: \"position\",\n          enabled: true,\n          children: [_jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.NETWORK + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"vector-square\"\n              }), _jsx(SelectComponent, {\n                allOptions: true,\n                onChange: handleRedeChange,\n                labelSelect: state.redeSelect,\n                dataOptions: mapRedesUnicas,\n                selectedOption: handleRedeChange,\n                width: \"300px\"\n              })]\n            })]\n          }), _jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.DISCIPLESHIP + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"network-wired\"\n              }), _jsx(SelectComponent, {\n                onChange: handleDiscipuladoChange,\n                labelSelect: state.discipuladoSelect ? state.discipuladoSelect : \"Selecione\",\n                dataOptions: state.redeSelect && mapDiscipuladosUnicos,\n                selectedOption: handleDiscipuladoChange,\n                width: \"300px\",\n                disabled: state.redeSelect === \"TODOS\" && \"Selecione\" ? true : false\n              })]\n            })]\n          }), state.redeSelect !== \"Selecione\" && _jsxs(_Fragment, {\n            children: [state.redeSelect === \"TODOS\" && _jsxs(_Fragment, {\n              children: [_jsx(Text, {\n                children: \"Rede\"\n              }), rede.map(function (items) {\n                return _jsx(PersonLabelComponent, {\n                  nome: items[1].rede,\n                  delMember: function delMember() {\n                    setConfirmModal(true), setName(items[1].rede), setId(items[0]);\n                  },\n                  onPress: function onPress() {\n                    return navigation.navigate(\"MemberInformation\", {\n                      nome: \"\" + items[1].nome,\n                      telefone: \"\" + items[1].telefone,\n                      email: \"\" + items[1].email,\n                      endereco: \"\" + items[1].endereco,\n                      bairro: \"\" + items[1].bairro,\n                      cep: \"\" + items[1].cep,\n                      cidade: \"\" + items[1].cidade,\n                      estado: \"\" + items[1].estado,\n                      estado_civil: \"\" + items[1].estado_civil,\n                      data_de_nascimento: \"\" + items[1].data_de_nascimento,\n                      status: \"\" + items[1].status,\n                      numero_casa: \"\" + items[1].numero_casa,\n                      id: \"\" + items[0],\n                      active: setTrigger\n                    });\n                  }\n                });\n              })]\n            }), !state.discipuladoSelect && state.redeSelect !== \"TODOS\" && _jsx(_Fragment, {\n              children: discipulado.length > 0 ? _jsxs(_Fragment, {\n                children: [_jsx(Text, {\n                  children: \"Discipulador\"\n                }), discipulado.map(function (item) {\n                  return _jsx(PersonLabelComponent, {\n                    nome: item[1].nome,\n                    delMember: function delMember() {\n                      setConfirmModal(true), setName(item[1].nome), setId(item[0]);\n                    },\n                    onPress: function onPress() {\n                      return navigation.navigate(\"MemberInformation\", {\n                        nome: \"\" + item[1].nome,\n                        telefone: \"\" + item[1].telefone,\n                        email: \"\" + item[1].email,\n                        endereco: \"\" + item[1].endereco,\n                        bairro: \"\" + item[1].bairro,\n                        cep: \"\" + item[1].cep,\n                        cidade: \"\" + item[1].cidade,\n                        estado: \"\" + item[1].estado,\n                        estado_civil: \"\" + item[1].estado_civil,\n                        data_de_nascimento: \"\" + item[1].data_de_nascimento,\n                        status: \"\" + item[1].status,\n                        numero_casa: \"\" + item[1].numero_casa,\n                        id: \"\" + item[0],\n                        active: setTrigger\n                      });\n                    }\n                  });\n                })]\n              }) : _jsx(Text, {\n                children: \"N\\xE3o h\\xE1 Discipuladores\"\n              })\n            }), state.redeSelect && state.discipuladoSelect && _jsx(_Fragment, {\n              children: lider.length > 0 ? _jsxs(_Fragment, {\n                children: [_jsx(Text, {\n                  children: \"C\\xE9lula\"\n                }), lider.map(function (item) {\n                  return _jsx(PersonLabelComponent, {\n                    nome: item[1].nome,\n                    delMember: function delMember() {\n                      setConfirmModal(true), setName(item[1].nome), setId(item[0]);\n                    },\n                    onPress: function onPress() {\n                      return navigation.navigate(\"MemberInformation\", {\n                        nome: \"\" + item[1].nome,\n                        telefone: \"\" + item[1].telefone,\n                        email: \"\" + item[1].email,\n                        endereco: \"\" + item[1].endereco,\n                        bairro: \"\" + item[1].bairro,\n                        cep: \"\" + item[1].cep,\n                        cidade: \"\" + item[1].cidade,\n                        estado: \"\" + item[1].estado,\n                        estado_civil: \"\" + item[1].estado_civil,\n                        data_de_nascimento: \"\" + item[1].data_de_nascimento,\n                        status: \"\" + item[1].status,\n                        numero_casa: \"\" + item[1].numero_casa,\n                        id: \"\" + item[0],\n                        active: setTrigger\n                      });\n                    }\n                  });\n                })]\n              }) : _jsx(Text, {\n                children: \"N\\xE3o h\\xE1 lideres\"\n              })\n            })]\n          })]\n        }), _jsx(ModalComponent, {\n          isVisible: confirmModal,\n          onBackdropPress: function onBackdropPress() {\n            return setConfirmModal(false);\n          },\n          children: _jsx(RequestContentModalComponent, {\n            name: name,\n            cancel: function cancel() {\n              return setConfirmModal(false);\n            },\n            confirm: function confirm() {\n              deleteMember();\n            }\n          })\n        }), _jsx(ModalComponent, {\n          isVisible: modalConcluded,\n          onBackdropPress: function onBackdropPress() {\n            return setModalConcluded(false);\n          },\n          children: _jsx(ApprovalRequest, {\n            name: name\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Fragment","useEffect","useState","useNavigation","FormFields","useFormReport","FormReportActions","MenuNavigation","RequestService","TitleComponent","HeaderComponent","SelectComponent","ModalComponent","ApprovalRequest","RequestContentModalComponent","ComeBackComponent","PersonLabelComponent","S","axios","loadingGif","require","NetworkScreenList","navigation","id","setId","celulas","setCelulas","loading","setLoading","name","setName","confirmModal","setConfirmModal","modalConcluded","setModalConcluded","state","dispatch","setTrigger","trigger","service","getUsers","then","response","finally","handleRedeChange","value","type","setRedeSelect","payload","setDiscipuladoSelect","setCelulaSelect","handleDiscipuladoChange","rede","Object","entries","filter","items","cargo","discipulado","redeSelect","lider","discipuladoSelect","discipuladossUnicos","map","nome","mapDiscipuladosUnicos","item","redesUnicas","mapRedesUnicas","timeModal","deleteMember","delete","setTimeout","err","alert","NETWORK","DISCIPLESHIP","navigate","telefone","email","endereco","bairro","cep","cidade","estado","estado_civil","data_de_nascimento","status","numero_casa","active","length"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/Network/index.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { ScrollView, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport FormFields from \"../../common/constants/form\";\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { FormReportActions } from \"../../contexts/FormReport\";\r\nimport MenuNavigation from \"../../common/constants/navigation\";\r\nimport RequestService from \"../../common/services/RequestService\";\r\n\r\nimport { TitleComponent } from \"../../components/Title\";\r\nimport { HeaderComponent } from \"../../components/Header\";\r\nimport { SelectComponent } from \"../../components/Select\";\r\nimport { ModalComponent } from \"../../components/Modal\";\r\nimport { ApprovalRequest } from \"../../components/Modal/ApprovalRequest\";\r\nimport { RequestContentModalComponent } from \"../../components/Modal/Request\";\r\nimport { ComeBackComponent } from \"../../components/ComeBack\";\r\nimport { PersonLabelComponent } from \"../../components/PersonLabel\";\r\n\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\nimport * as S from \"./styles\";\r\nimport axios from \"axios\";\r\n\r\nconst loadingGif = require(\"../../assets/loader-two.gif\");\r\n\r\nexport default function NetworkScreenList() {\r\n  const navigation = useNavigation<IPropsAppStack>();\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [celulas, setCelulas] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState<string>();\r\n  const [confirmModal, setConfirmModal] = useState(false);\r\n  const [modalConcluded, setModalConcluded] = useState(false);\r\n  const { state, dispatch, setTrigger, trigger } = useFormReport();\r\n\r\n  const service = new RequestService();\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      await service\r\n        .getUsers()\r\n        .then((response) => {\r\n          setCelulas(response);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    getUsers();\r\n  }, [trigger]);\r\n\r\n  const handleRedeChange = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setRedeSelect,\r\n      payload: value,\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: null,\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: null,\r\n    });\r\n  };\r\n\r\n  const handleDiscipuladoChange = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: value,\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: null,\r\n    });\r\n  };\r\n\r\n  const rede =\r\n    celulas &&\r\n    Object.entries(celulas).filter((items: any) => {\r\n      return items[1]?.cargo === \"pastor\";\r\n    });\r\n\r\n  const discipulado =\r\n    celulas &&\r\n    Object.entries(celulas).filter((items: any) => {\r\n      return (\r\n        items[1]?.cargo === \"discipulador\" &&\r\n        items[1]?.rede === state.redeSelect\r\n      );\r\n    });\r\n\r\n  const lider =\r\n    celulas &&\r\n    Object.entries(celulas).filter((items: any) => {\r\n      return (\r\n        items[1]?.cargo === \"lider\" &&\r\n        items[1]?.discipulado === state.discipuladoSelect\r\n      );\r\n    });\r\n\r\n  const discipuladossUnicos = discipulado.map((items: any) => items[1]?.nome);\r\n\r\n  const mapDiscipuladosUnicos = discipuladossUnicos.map((item: any) => {\r\n    return {\r\n      value: item,\r\n    };\r\n  });\r\n\r\n  const redesUnicas = rede.map((items: any) => items[1]?.rede);\r\n\r\n  const mapRedesUnicas = redesUnicas.map((item: any) => {\r\n    return {\r\n      value: item,\r\n    };\r\n  });\r\n\r\n  const timeModal = () => {\r\n    setModalConcluded(true);\r\n  };\r\n\r\n  const deleteMember = async () => {\r\n    try {\r\n      await axios.delete(\r\n        `https://app-ibav-f06f4-default-rtdb.firebaseio.com/users/${id}.json`,\r\n        {}\r\n      );\r\n      setConfirmModal(false);\r\n      setTimeout(timeModal, 300);\r\n      setTrigger(!trigger);\r\n    } catch (err) {\r\n      alert(\"Houve algum problema ao excluir esse usuÃ¡rio\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <HeaderComponent>\r\n        <S.ContainerNav>\r\n          <ComeBackComponent />\r\n          <S.Navigation>{MenuNavigation.NETWORK}</S.Navigation>\r\n        </S.ContainerNav>\r\n      </HeaderComponent>\r\n\r\n      {loading ? (\r\n        <S.Loading source={loadingGif} />\r\n      ) : (\r\n        <ScrollView>\r\n          <S.Content>\r\n            <S.Form behavior=\"position\" enabled>\r\n              <S.Grid>\r\n                <TitleComponent\r\n                  title={`${FormFields.NETWORK}:`}\r\n                  small\r\n                  primary\r\n                />\r\n                <S.ContentC>\r\n                  <S.IconC name=\"vector-square\" />\r\n                  <SelectComponent\r\n                    allOptions\r\n                    onChange={handleRedeChange}\r\n                    labelSelect={state.redeSelect}\r\n                    dataOptions={mapRedesUnicas}\r\n                    selectedOption={handleRedeChange}\r\n                    width=\"300px\"\r\n                  />\r\n                </S.ContentC>\r\n              </S.Grid>\r\n\r\n              <S.Grid>\r\n                <TitleComponent\r\n                  title={`${FormFields.DISCIPLESHIP}:`}\r\n                  small\r\n                  primary\r\n                />\r\n                <S.ContentC>\r\n                  <S.IconC name=\"network-wired\" />\r\n                  <SelectComponent\r\n                    onChange={handleDiscipuladoChange}\r\n                    labelSelect={\r\n                      state.discipuladoSelect\r\n                        ? state.discipuladoSelect\r\n                        : \"Selecione\"\r\n                    }\r\n                    dataOptions={state.redeSelect && mapDiscipuladosUnicos}\r\n                    selectedOption={handleDiscipuladoChange}\r\n                    width=\"300px\"\r\n                    disabled={\r\n                      state.redeSelect === \"TODOS\" && \"Selecione\" ? true : false\r\n                    }\r\n                  />\r\n                </S.ContentC>\r\n              </S.Grid>\r\n              {state.redeSelect !== \"Selecione\" && (\r\n                <>\r\n                  {state.redeSelect === \"TODOS\" && (\r\n                    <>\r\n                      <Text>Rede</Text>\r\n                      {rede.map((items: any) => {\r\n                        return (\r\n                          <PersonLabelComponent\r\n                            nome={items[1].rede}\r\n                            delMember={() => {\r\n                              setConfirmModal(true),\r\n                                setName(items[1].rede),\r\n                                setId(items[0]);\r\n                            }}\r\n                            onPress={() =>\r\n                              navigation.navigate(\"MemberInformation\", {\r\n                                nome: `${items[1].nome}`,\r\n                                telefone: `${items[1].telefone}`,\r\n                                email: `${items[1].email}`,\r\n                                endereco: `${items[1].endereco}`,\r\n                                bairro: `${items[1].bairro}`,\r\n                                cep: `${items[1].cep}`,\r\n                                cidade: `${items[1].cidade}`,\r\n                                estado: `${items[1].estado}`,\r\n                                estado_civil: `${items[1].estado_civil}`,\r\n                                data_de_nascimento: `${items[1].data_de_nascimento}`,\r\n                                status: `${items[1].status}`,\r\n                                numero_casa: `${items[1].numero_casa}`,\r\n                                id: `${items[0]}`,\r\n                                active: setTrigger\r\n                              })\r\n                            }\r\n                          />\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}\r\n                  {!state.discipuladoSelect && state.redeSelect !== \"TODOS\" && (\r\n                    <>\r\n                      {discipulado.length > 0 ? (\r\n                        <>\r\n                          <Text>Discipulador</Text>\r\n                          {discipulado.map((item: any) => {\r\n                            return (\r\n                              <PersonLabelComponent\r\n                                nome={item[1].nome}\r\n                                delMember={() => {\r\n                                  setConfirmModal(true),\r\n                                    setName(item[1].nome),\r\n                                    setId(item[0]);\r\n                                }}\r\n                                onPress={() =>\r\n                                  navigation.navigate(\"MemberInformation\", {\r\n                                    nome: `${item[1].nome}`,\r\n                                    telefone: `${item[1].telefone}`,\r\n                                    email: `${item[1].email}`,\r\n                                    endereco: `${item[1].endereco}`,\r\n                                    bairro: `${item[1].bairro}`,\r\n                                    cep: `${item[1].cep}`,\r\n                                    cidade: `${item[1].cidade}`,\r\n                                    estado: `${item[1].estado}`,\r\n                                    estado_civil: `${item[1].estado_civil}`,\r\n                                    data_de_nascimento: `${item[1].data_de_nascimento}`,\r\n                                    status: `${item[1].status}`,\r\n                                    numero_casa: `${item[1].numero_casa}`,\r\n                                    id: `${item[0]}`,\r\n                                    active: setTrigger\r\n                                  })\r\n                                }\r\n                              />\r\n                            );\r\n                          })}\r\n                        </>\r\n                      ) : (\r\n                        <Text>NÃ£o hÃ¡ Discipuladores</Text>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                  {state.redeSelect && state.discipuladoSelect && (\r\n                    <>\r\n                      {lider.length > 0 ? (\r\n                        <>\r\n                          <Text>CÃ©lula</Text>\r\n                          {lider.map((item: any) => {\r\n                            return (\r\n                              <PersonLabelComponent\r\n                                nome={item[1].nome}\r\n                                delMember={() => {\r\n                                  setConfirmModal(true),\r\n                                    setName(item[1].nome),\r\n                                    setId(item[0]);\r\n                                }}\r\n                                onPress={() =>\r\n                                  navigation.navigate(\"MemberInformation\", {\r\n                                    nome: `${item[1].nome}`,\r\n                                    telefone: `${item[1].telefone}`,\r\n                                    email: `${item[1].email}`,\r\n                                    endereco: `${item[1].endereco}`,\r\n                                    bairro: `${item[1].bairro}`,\r\n                                    cep: `${item[1].cep}`,\r\n                                    cidade: `${item[1].cidade}`,\r\n                                    estado: `${item[1].estado}`,\r\n                                    estado_civil: `${item[1].estado_civil}`,\r\n                                    data_de_nascimento: `${item[1].data_de_nascimento}`,\r\n                                    status: `${item[1].status}`,\r\n                                    numero_casa: `${item[1].numero_casa}`,\r\n                                    id: `${item[0]}`,\r\n                                    active: setTrigger\r\n                                  })\r\n                                }\r\n                              />\r\n                            );\r\n                          })}\r\n                        </>\r\n                      ) : (\r\n                        <Text>NÃ£o hÃ¡ lideres</Text>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </S.Form>\r\n            <ModalComponent\r\n              isVisible={confirmModal}\r\n              onBackdropPress={() => setConfirmModal(false)}\r\n            >\r\n              <RequestContentModalComponent\r\n                name={name}\r\n                cancel={() => setConfirmModal(false)}\r\n                confirm={() => {\r\n                  deleteMember();\r\n                }}\r\n              />\r\n            </ModalComponent>\r\n\r\n            <ModalComponent\r\n              isVisible={modalConcluded}\r\n              onBackdropPress={() => setModalConcluded(false)}\r\n            >\r\n              <ApprovalRequest name={name} />\r\n            </ModalComponent>\r\n          </S.Content>\r\n        </ScrollView>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}