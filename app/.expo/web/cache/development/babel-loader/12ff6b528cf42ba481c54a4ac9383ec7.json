{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { format } from 'date-fns';\nimport { HeaderComponent } from \"../../components/Header\";\nimport { ButtonComponent } from \"../../components/Button\";\nimport { ComeBackComponent } from \"../../components/ComeBack\";\nimport { PersonLabelComponent } from \"../../components/PersonLabel\";\nimport { SelectComponent } from \"../../components/Select\";\nimport { TitleComponent } from \"../../components/Title\";\n\nvar loadingGif = require(\"../../assets/loader-two.gif\");\n\nimport FormFields from \"../../common/constants/form\";\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\nimport { GetStorage } from \"../../common/constants/storage\";\nimport MenuNavigation from \"../../common/constants/navigation\";\nimport * as S from \"./styles\";\nimport { ModalComponent } from \"../../components/Modal\";\nimport { RequestContentModalComponent } from \"../../components/Modal/Request\";\nimport { connectApi } from \"../../common/services/ConnectApi\";\nimport { FormReportActions } from \"../../contexts/FormReport\";\nimport { ApprovalRequest } from \"../../components/Modal/ApprovalRequest\";\nimport RequestService from \"../../common/services/RequestService\";\nimport { useFormReport } from \"../../hooks/useFormReport\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function MembersScreen() {\n  var _celulas$3, _celulas$4;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      members = _useState2[0],\n      setMembers = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sendModal = _useState4[0],\n      setSendModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalConcluded = _useState6[0],\n      setModalConcluded = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      id = _useState10[0],\n      setId = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      celulas = _useState14[0],\n      setCelulas = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      celulaFiltered = _useState16[0],\n      setCelulaFiltered = _useState16[1];\n\n  var _useUserFiltered = useUserFiltered(),\n      user = _useUserFiltered.user;\n\n  var _useFormReport = useFormReport(),\n      state = _useFormReport.state,\n      trigger = _useFormReport.trigger,\n      celulaId = _useFormReport.celulaId,\n      setTrigger = _useFormReport.setTrigger,\n      setCelulaId = _useFormReport.setCelulaId,\n      dispatch = _useFormReport.dispatch;\n\n  var navigation = useNavigation();\n  var identifyCelula = user && user[0][1].numero_celula;\n  var serviceGet = new RequestService();\n  var idCelula = members && members.length > 0 && (Object == null ? void 0 : Object.entries(members[0])[0][1]);\n\n  var clean = function clean(value) {\n    navigation.navigate(value);\n    dispatch({\n      type: FormReportActions.setRedeSelect,\n      payload: 'Selecione'\n    });\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: 'Selecione'\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: 'Selecione'\n    });\n  };\n\n  useEffect(function () {\n    if (idCelula !== false) {\n      setCelulaId(idCelula);\n    }\n  }, [idCelula]);\n  var userInfo = user && user[0][1];\n  var whatOffice = userInfo && userInfo.cargo;\n\n  var selectedOptionCelula = function selectedOptionCelula(value) {\n    dispatch({\n      type: FormReportActions.setTextSelectCelula,\n      payload: value\n    });\n  };\n\n  var handleCelulaChange = function handleCelulaChange(value) {\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: value\n    });\n  };\n\n  useEffect(function () {\n    var getCelulas = function () {\n      var _ref = _asyncToGenerator(function* () {\n        yield serviceGet.getCelulas().then(function (response) {\n          setCelulas(Object.entries(response));\n        });\n      });\n\n      return function getCelulas() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCelulas();\n  }, [trigger]);\n\n  if (whatOffice === 'lider') {\n    useEffect(function () {\n      var _celulas$;\n\n      var filterMembers = celulas && celulas.length > 0 && ((_celulas$ = celulas[1]) == null ? void 0 : _celulas$.filter(function (item) {\n        return item.numero_celula == identifyCelula;\n      }));\n\n      if (filterMembers) {\n        setMembers(filterMembers);\n        AsyncStorage.setItem(GetStorage.MEMBERS_FILTERED, JSON.stringify(filterMembers));\n      }\n    }, [identifyCelula, celulas]);\n  }\n\n  var timeModal = function timeModal() {\n    setModalConcluded(true);\n  };\n\n  var deleteMember = function deleteMember() {\n    try {\n      connectApi.delete(\"/celulas/\" + idCelula + \"/membros/\" + id + \".json\").then(function () {\n        setSendModal(false);\n        setTimeout(timeModal, 300);\n        setTrigger(!trigger);\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  var handleRedeChange = function handleRedeChange(value) {\n    dispatch({\n      type: FormReportActions.setRedeSelect,\n      payload: value\n    });\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: 'Selecione'\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: 'Selecione'\n    });\n  };\n\n  var handleDiscipuladoChange = function handleDiscipuladoChange(value) {\n    dispatch({\n      type: FormReportActions.setDiscipuladoSelect,\n      payload: value\n    });\n    dispatch({\n      type: FormReportActions.setCelulaSelect,\n      payload: 'Selecione'\n    });\n  };\n\n  useEffect(function () {\n    var _celulas$2;\n\n    var filterCelulas = celulas && celulas.length > 0 && ((_celulas$2 = celulas[1]) == null ? void 0 : _celulas$2.filter(function (celula) {\n      return celula.discipulador === userInfo.nome;\n    }));\n    setCelulaFiltered(filterCelulas);\n  }, [celulas]);\n  var redes = celulas && (celulas == null ? void 0 : celulas.map(function (item) {\n    return item[1].rede;\n  }));\n  var redesUnicas = redes && redes.filter(function (este, i) {\n    return redes.indexOf(este) === i && este;\n  });\n  var mapRedesUnicas = redesUnicas && redesUnicas.map(function (item) {\n    return {\n      value: item\n    };\n  });\n  var filtrandoRedes = celulas && celulas.filter(function (item) {\n    return item[1].rede === state.redeSelect;\n  });\n  var discipulado = filtrandoRedes && filtrandoRedes.map(function (item) {\n    return item[1].discipulador;\n  });\n  var discipuladossUnicos = discipulado && discipulado.filter(function (este, i) {\n    return discipulado.indexOf(este) === i;\n  });\n  var mapDiscipuladosUnicos = discipuladossUnicos && discipuladossUnicos.map(function (item) {\n    return {\n      value: item\n    };\n  });\n  var filtrandoDiscipulado = celulas && celulas.length > 0 && (celulas == null ? void 0 : celulas.filter(function (item) {\n    return item[1].discipulador === state.discipuladoSelect && item[1].rede === state.redeSelect;\n  }));\n  var celulaAdm = filtrandoDiscipulado && filtrandoDiscipulado.map(function (item) {\n    return {\n      value: item[1].numero_celula + \" - \" + item[1].lider\n    };\n  });\n\n  if (whatOffice === 'administrador') {\n    useEffect(function () {\n      var idCelulaSelect = state.celulaSelect && state.celulaSelect.split(\" -\")[0];\n      var filterMembers = celulas && celulas.filter(function (item) {\n        return item[1].numero_celula == idCelulaSelect;\n      });\n\n      if (filterMembers) {\n        setMembers(filterMembers);\n      }\n    }, [celulas, state.celulaSelect, trigger]);\n  }\n\n  var newMembersList = members && members.length > 0 && members[0][1].membros ? Object.entries(members[0][1].membros).filter(function (member) {\n    return member.status !== \"visitante\";\n  }) : [];\n  var filtrandoDiscipuladoPastor = celulas && celulas.length > 0 && ((_celulas$3 = celulas[1]) == null ? void 0 : _celulas$3.filter(function (item) {\n    return item.rede === user[0][1].rede;\n  }));\n  var mapDiscipuladoPastor = filtrandoDiscipuladoPastor && filtrandoDiscipuladoPastor.map(function (item) {\n    return item.discipulador;\n  });\n  var discipuladossUnicosPastor = mapDiscipuladoPastor && mapDiscipuladoPastor.filter(function (este, i) {\n    return mapDiscipuladoPastor.indexOf(este) === i;\n  });\n  var mapDiscipuladossUnicosPastor = discipuladossUnicosPastor && discipuladossUnicosPastor.map(function (item) {\n    return {\n      value: item\n    };\n  });\n  var filtrandoDiscipuladoPastorSelect = celulas && celulas.length > 0 && ((_celulas$4 = celulas[1]) == null ? void 0 : _celulas$4.filter(function (item) {\n    return item.discipulador === state.discipuladoSelect;\n  }));\n  var celulaPastor = filtrandoDiscipuladoPastorSelect && filtrandoDiscipuladoPastorSelect.map(function (item) {\n    return {\n      value: item.numero_celula + \" - \" + item.lider\n    };\n  });\n  var optionsCelula = celulaFiltered && celulaFiltered.map(function (celulaIdentify) {\n    return {\n      value: (celulaIdentify == null ? void 0 : celulaIdentify.numero_celula) + \" - \" + celulaIdentify.lider\n    };\n  });\n\n  var office = function office() {\n    switch (whatOffice) {\n      case \"lider\":\n        return _jsxs(S.Grid, {\n          children: [_jsx(TitleComponent, {\n            title: FormFields.CELULA + \":\",\n            small: true,\n            primary: true\n          }), _jsxs(S.ContentC, {\n            children: [_jsx(S.IconC, {\n              name: \"user-friends\"\n            }), _jsx(S.DescriptionC, {\n              children: (userInfo && userInfo.numero_celula) + \" - \" + (userInfo && userInfo.rede)\n            })]\n          })]\n        });\n\n      case \"discipulador\":\n        return _jsxs(S.Grid, {\n          children: [_jsx(TitleComponent, {\n            title: FormFields.CELULA + \":\",\n            small: true,\n            primary: true\n          }), _jsxs(S.ContentC, {\n            children: [_jsx(S.IconC, {\n              name: \"user-friends\"\n            }), _jsx(SelectComponent, {\n              onChange: handleCelulaChange,\n              labelSelect: state.textSelectCelula,\n              dataOptions: optionsCelula && optionsCelula,\n              selectedOption: selectedOptionCelula\n            })]\n          })]\n        });\n\n      case \"pastor\":\n        return _jsxs(_Fragment, {\n          children: [_jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.DISCIPLESHIP + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"network-wired\"\n              }), _jsx(SelectComponent, {\n                onChange: handleDiscipuladoChange,\n                labelSelect: state.discipuladoSelect,\n                dataOptions: mapDiscipuladossUnicosPastor,\n                selectedOption: handleDiscipuladoChange\n              })]\n            })]\n          }), _jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.CELULA + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"user-friends\"\n              }), _jsx(SelectComponent, {\n                onChange: handleCelulaChange,\n                labelSelect: state.celulaSelect,\n                dataOptions: celulaPastor,\n                selectedOption: selectedOptionCelula\n              })]\n            })]\n          })]\n        });\n\n      case \"administrador\":\n        return _jsxs(_Fragment, {\n          children: [_jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.NETWORK + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"vector-square\"\n              }), _jsx(SelectComponent, {\n                onChange: handleRedeChange,\n                labelSelect: state.redeSelect,\n                dataOptions: mapRedesUnicas,\n                selectedOption: handleRedeChange,\n                width: \"300\"\n              })]\n            })]\n          }), _jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.DISCIPLESHIP + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"network-wired\"\n              }), _jsx(SelectComponent, {\n                onChange: handleDiscipuladoChange,\n                labelSelect: state.discipuladoSelect,\n                dataOptions: state.redeSelect && mapDiscipuladosUnicos,\n                selectedOption: handleDiscipuladoChange,\n                width: \"300\",\n                disabled: state.redeSelect === \"Selecione\" ? true : false\n              })]\n            })]\n          }), _jsxs(S.Grid, {\n            children: [_jsx(TitleComponent, {\n              title: FormFields.CELULA + \":\",\n              small: true,\n              primary: true\n            }), _jsxs(S.ContentC, {\n              children: [_jsx(S.IconC, {\n                name: \"user-friends\"\n              }), _jsx(SelectComponent, {\n                onChange: handleCelulaChange,\n                labelSelect: state.celulaSelect,\n                dataOptions: celulaAdm,\n                selectedOption: selectedOptionCelula,\n                width: \"300\",\n                disabled: state.discipuladoSelect === \"Selecione\" ? true : false\n              })]\n            })]\n          })]\n        });\n    }\n  };\n\n  return _jsxs(Fragment, {\n    children: [_jsx(HeaderComponent, {\n      children: _jsxs(S.ContentHeader, {\n        children: [_jsxs(S.Division, {\n          children: [_jsx(ComeBackComponent, {}), _jsx(S.Navigation, {\n            children: MenuNavigation.MEMBERS\n          })]\n        }), _jsx(ButtonComponent, {\n          title: \"Cadastrar\",\n          onPress: function onPress() {\n            return clean(\"Register\");\n          },\n          width: \"136px\",\n          heigth: \"33px\",\n          size: \"12px\",\n          icon: \"user-plus\",\n          color: \"white\"\n        })]\n      })\n    }), _jsx(ScrollView, {\n      children: _jsx(S.Content, {\n        children: loading ? _jsx(S.Loading, {\n          source: loadingGif\n        }) : _jsxs(Fragment, {\n          children: [office(), state.celulaSelect !== \"Selecione\" && _jsx(_Fragment, {\n            children: newMembersList.length > 0 ? newMembersList == null ? void 0 : newMembersList.map(function (item) {\n              return _jsx(Fragment, {\n                children: _jsx(PersonLabelComponent, {\n                  nome: item[1].nome,\n                  status: item[1].status,\n                  onPress: function onPress() {\n                    return navigation.navigate(\"MemberInformation\", {\n                      nome: \"\" + item[1].nome,\n                      telefone: \"\" + item[1].telefone,\n                      email: \"\" + item[1].email,\n                      endereco: \"\" + item[1].endereco,\n                      bairro: \"\" + item[1].bairro,\n                      cep: \"\" + item[1].cep,\n                      cidade: \"\" + item[1].cidade,\n                      estado: \"\" + item[1].estado,\n                      estado_civil: \"\" + item[1].estado_civil,\n                      data_de_nascimento: \"\" + format(new Date(item[1].data_de_nascimento), 'dd/MM/yyyy'),\n                      status: \"\" + item[1].status,\n                      numero_casa: \"\" + item[1].numero_casa,\n                      id: \"\" + item[0],\n                      active: setTrigger\n                    });\n                  },\n                  delMember: function delMember() {\n                    setSendModal(true), setName(item[1].nome), setId(item[0]);\n                  }\n                })\n              });\n            }) : _jsx(Text, {\n              children: \"N\\xE3o h\\xE1 membros\"\n            })\n          })]\n        })\n      })\n    }), _jsx(ModalComponent, {\n      isVisible: sendModal,\n      onBackdropPress: function onBackdropPress() {\n        return setSendModal(false);\n      },\n      children: _jsx(RequestContentModalComponent, {\n        name: name,\n        cancel: function cancel() {\n          return setSendModal(false);\n        },\n        confirm: function confirm() {\n          deleteMember();\n        }\n      })\n    }), _jsx(ModalComponent, {\n      isVisible: modalConcluded,\n      onBackdropPress: function onBackdropPress() {\n        return setModalConcluded(false);\n      },\n      children: _jsx(ApprovalRequest, {\n        name: name\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Fragment","useNavigation","AsyncStorage","format","HeaderComponent","ButtonComponent","ComeBackComponent","PersonLabelComponent","SelectComponent","TitleComponent","loadingGif","require","FormFields","useUserFiltered","GetStorage","MenuNavigation","S","ModalComponent","RequestContentModalComponent","connectApi","FormReportActions","ApprovalRequest","RequestService","useFormReport","MembersScreen","members","setMembers","sendModal","setSendModal","modalConcluded","setModalConcluded","name","setName","id","setId","loading","setLoading","celulas","setCelulas","celulaFiltered","setCelulaFiltered","user","state","trigger","celulaId","setTrigger","setCelulaId","dispatch","navigation","identifyCelula","numero_celula","serviceGet","idCelula","length","Object","entries","clean","value","navigate","type","setRedeSelect","payload","setDiscipuladoSelect","setCelulaSelect","userInfo","whatOffice","cargo","selectedOptionCelula","setTextSelectCelula","handleCelulaChange","getCelulas","then","response","filterMembers","filter","item","setItem","MEMBERS_FILTERED","JSON","stringify","timeModal","deleteMember","delete","setTimeout","err","alert","handleRedeChange","handleDiscipuladoChange","filterCelulas","celula","discipulador","nome","redes","map","rede","redesUnicas","este","i","indexOf","mapRedesUnicas","filtrandoRedes","redeSelect","discipulado","discipuladossUnicos","mapDiscipuladosUnicos","filtrandoDiscipulado","discipuladoSelect","celulaAdm","lider","idCelulaSelect","celulaSelect","split","newMembersList","membros","member","status","filtrandoDiscipuladoPastor","mapDiscipuladoPastor","discipuladossUnicosPastor","mapDiscipuladossUnicosPastor","filtrandoDiscipuladoPastorSelect","celulaPastor","optionsCelula","celulaIdentify","office","CELULA","textSelectCelula","DISCIPLESHIP","NETWORK","MEMBERS","telefone","email","endereco","bairro","cep","cidade","estado","estado_civil","data_de_nascimento","Date","numero_casa","active"],"sources":["C:/Users/felip/AppIbavNovo/app/src/screens/Members/index.tsx"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { ScrollView, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { format } from 'date-fns'\r\n\r\nimport { HeaderComponent } from \"../../components/Header\";\r\nimport { ButtonComponent } from \"../../components/Button\";\r\nimport { ComeBackComponent } from \"../../components/ComeBack\";\r\nimport { PersonLabelComponent } from \"../../components/PersonLabel\";\r\nimport { SelectComponent } from \"../../components/Select\";\r\nimport { TitleComponent } from \"../../components/Title\";\r\n\r\nconst loadingGif = require(\"../../assets/loader-two.gif\");\r\n\r\nimport FormFields from \"../../common/constants/form\";\r\nimport useUserFiltered from \"../../hooks/useUserFiltered\";\r\nimport { GetStorage } from \"../../common/constants/storage\";\r\nimport MenuNavigation from \"../../common/constants/navigation\";\r\n\r\nimport { IPropsAppStack } from \"../../routes/AppStack/types\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { ModalComponent } from \"../../components/Modal\";\r\nimport { RequestContentModalComponent } from \"../../components/Modal/Request\";\r\nimport { connectApi } from \"../../common/services/ConnectApi\";\r\nimport { FormReportActions } from \"../../contexts/FormReport\";\r\nimport { ApprovalRequest } from \"../../components/Modal/ApprovalRequest\";\r\nimport RequestService from \"../../common/services/RequestService\";\r\nimport { useFormReport } from \"../../hooks/useFormReport\";\r\nimport { IContentProps } from \"../SendReport/types\";\r\n\r\nexport function MembersScreen(this: any) {\r\n  const [members, setMembers] = useState<any>([]);\r\n  const [sendModal, setSendModal] = useState(false);\r\n  const [modalConcluded, setModalConcluded] = useState(false);\r\n  const [name, setName] = useState<string>();\r\n  const [id, setId] = useState<any>();\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [celulas, setCelulas] = useState<any>()\r\n  const [celulaFiltered, setCelulaFiltered] = useState<any>([]);\r\n\r\n  const { user } = useUserFiltered();\r\n  const { state, trigger, celulaId, setTrigger, setCelulaId, dispatch } = useFormReport()\r\n  const navigation = useNavigation<IPropsAppStack>();\r\n\r\n  const identifyCelula = user && user[0][1].numero_celula;\r\n\r\n  const serviceGet = new RequestService()\r\n\r\n  const idCelula = members && members.length > 0 && Object?.entries(members[0])[0][1];\r\n\r\n  const clean = (value: string) => {\r\n    navigation.navigate(value)\r\n    dispatch({\r\n      type: FormReportActions.setRedeSelect,\r\n      payload: 'Selecione',\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: 'Selecione',\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: 'Selecione',\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (idCelula !== false) {\r\n      setCelulaId(idCelula)\r\n    }\r\n  }, [idCelula])\r\n\r\n  const userInfo = user && user[0][1];\r\n  const whatOffice = userInfo && userInfo.cargo;\r\n\r\n  const selectedOptionCelula = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setTextSelectCelula,\r\n      payload: value,\r\n    });\r\n  };\r\n\r\n  const handleCelulaChange = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCelulas = async () => {\r\n      await serviceGet.getCelulas().then((response) => {\r\n        setCelulas(Object.entries(response))\r\n      })\r\n    }\r\n\r\n    getCelulas()\r\n  }, [trigger]);\r\n\r\n  if (whatOffice === 'lider') {\r\n    useEffect(() => {\r\n      const filterMembers =\r\n        celulas &&\r\n        celulas.length > 0 &&\r\n        celulas[1]?.filter((item: any) => {\r\n          return item.numero_celula == identifyCelula;\r\n        });\r\n\r\n      if (filterMembers) {\r\n        setMembers(filterMembers);\r\n        AsyncStorage.setItem(\r\n          GetStorage.MEMBERS_FILTERED,\r\n          JSON.stringify(filterMembers)\r\n        );\r\n      }\r\n    }, [identifyCelula, celulas]);\r\n  }\r\n\r\n  const timeModal = () => {\r\n    setModalConcluded(true);\r\n  };\r\n\r\n  const deleteMember = () => {\r\n    try {\r\n      connectApi.delete(`/celulas/${idCelula}/membros/${id}.json`).then(() => {\r\n        setSendModal(false);\r\n        setTimeout(timeModal, 300);\r\n        setTrigger(!trigger)\r\n      });\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const handleRedeChange = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setRedeSelect,\r\n      payload: value,\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: 'Selecione',\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: 'Selecione',\r\n    });\r\n  };\r\n\r\n  const handleDiscipuladoChange = (value: string) => {\r\n    dispatch({\r\n      type: FormReportActions.setDiscipuladoSelect,\r\n      payload: value,\r\n    });\r\n    dispatch({\r\n      type: FormReportActions.setCelulaSelect,\r\n      payload: 'Selecione',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filterCelulas =\r\n      celulas &&\r\n      celulas.length > 0 &&\r\n      celulas[1]?.filter((celula: any) => {\r\n        return celula.discipulador === userInfo.nome;\r\n      });\r\n\r\n    setCelulaFiltered(filterCelulas);\r\n  }, [celulas]);\r\n\r\n  // Tratativas para o usuário administrador\r\n  const redes = celulas && celulas?.map((item: any) => (item[1].rede))\r\n\r\n  const redesUnicas = redes && redes.filter(function (este: any, i: any) {\r\n    return redes.indexOf(este) === i && este;\r\n  });\r\n\r\n  const mapRedesUnicas = redesUnicas && redesUnicas.map((item: any) => {\r\n    return {\r\n      value: item\r\n    }\r\n  })\r\n\r\n  const filtrandoRedes = celulas && celulas.filter((item: any) => {\r\n    return item[1].rede === state.redeSelect\r\n  })\r\n\r\n  const discipulado = filtrandoRedes && filtrandoRedes.map((item: any) =>\r\n    (item[1].discipulador))\r\n\r\n  const discipuladossUnicos = discipulado && discipulado.filter(function (este: any, i: any) {\r\n    return discipulado.indexOf(este) === i;\r\n  });\r\n\r\n  const mapDiscipuladosUnicos = discipuladossUnicos && discipuladossUnicos.map((item: any) => {\r\n    return {\r\n      value: item\r\n    }\r\n  })\r\n\r\n  const filtrandoDiscipulado = celulas && celulas.length > 0 && celulas?.filter((item: any) => {\r\n    return item[1].discipulador === state.discipuladoSelect && item[1].rede === state.redeSelect\r\n  })\r\n\r\n  const celulaAdm = filtrandoDiscipulado && filtrandoDiscipulado.map((item: any) => {\r\n    return {\r\n      value: `${item[1].numero_celula} - ${item[1].lider}`\r\n    }\r\n  })\r\n\r\n  if (whatOffice === 'administrador') {\r\n    useEffect(() => {\r\n      const idCelulaSelect = state.celulaSelect && state.celulaSelect.split(\" -\")[0];\r\n\r\n      const filterMembers =\r\n        celulas &&\r\n        celulas.filter((item: any) => {\r\n          return (\r\n            item[1].numero_celula == idCelulaSelect\r\n          )\r\n        });\r\n\r\n      if (filterMembers) {\r\n        setMembers(filterMembers);\r\n      }\r\n    }, [celulas, state.celulaSelect, trigger])\r\n  }\r\n\r\n  const newMembersList =\r\n    members &&\r\n      members.length > 0 &&\r\n      members[0][1].membros ? Object.entries(members[0][1].membros).filter(\r\n        (member: any) =>\r\n          member.status !== \"visitante\"\r\n      ) : [];\r\n\r\n\r\n  // Tratativas para o usuário pastor\r\n\r\n  const filtrandoDiscipuladoPastor = celulas && celulas.length > 0 && celulas[1]?.filter((item: any) => {\r\n    return item.rede === user[0][1].rede\r\n  })\r\n\r\n  const mapDiscipuladoPastor = filtrandoDiscipuladoPastor && filtrandoDiscipuladoPastor.map((item: any) => {\r\n    return item.discipulador\r\n  })\r\n\r\n  const discipuladossUnicosPastor = mapDiscipuladoPastor && mapDiscipuladoPastor.filter(function (este: any, i: any) {\r\n    return mapDiscipuladoPastor.indexOf(este) === i;\r\n  });\r\n\r\n  const mapDiscipuladossUnicosPastor = discipuladossUnicosPastor && discipuladossUnicosPastor.map((item: any) => {\r\n    return {\r\n      value: item\r\n    }\r\n  })\r\n\r\n  const filtrandoDiscipuladoPastorSelect = celulas && celulas.length > 0 && celulas[1]?.filter((item: any) => {\r\n    return item.discipulador === state.discipuladoSelect\r\n  })\r\n\r\n  const celulaPastor = filtrandoDiscipuladoPastorSelect && filtrandoDiscipuladoPastorSelect.map((item: any) => {\r\n    return {\r\n      value: `${item.numero_celula} - ${item.lider}`\r\n    }\r\n  })\r\n\r\n  const optionsCelula =\r\n    celulaFiltered &&\r\n    celulaFiltered.map((celulaIdentify: IContentProps) => {\r\n      return {\r\n        value: `${celulaIdentify?.numero_celula} - ${celulaIdentify.lider}`,\r\n      };\r\n    });\r\n\r\n  const office = () => {\r\n    switch (whatOffice) {\r\n      case \"lider\":\r\n        return (\r\n          <S.Grid>\r\n            <TitleComponent title={`${FormFields.CELULA}:`} small primary />\r\n            <S.ContentC>\r\n              <S.IconC name=\"user-friends\" />\r\n              <S.DescriptionC>{`${userInfo && userInfo.numero_celula} - ${userInfo && userInfo.rede\r\n                }`}</S.DescriptionC>\r\n            </S.ContentC>\r\n          </S.Grid>\r\n        );\r\n\r\n      case \"discipulador\":\r\n        return (\r\n          <S.Grid>\r\n            <TitleComponent title={`${FormFields.CELULA}:`} small primary />\r\n            <S.ContentC>\r\n              <S.IconC name=\"user-friends\" />\r\n              <SelectComponent\r\n                onChange={handleCelulaChange}\r\n                labelSelect={state.textSelectCelula}\r\n                dataOptions={optionsCelula && optionsCelula}\r\n                selectedOption={selectedOptionCelula}\r\n              />\r\n            </S.ContentC>\r\n          </S.Grid>\r\n        );\r\n      case \"pastor\":\r\n        return (\r\n          <>\r\n            <S.Grid>\r\n              <TitleComponent title={`${FormFields.DISCIPLESHIP}:`} small primary />\r\n              <S.ContentC>\r\n                <S.IconC name=\"network-wired\" />\r\n                <SelectComponent\r\n                  onChange={handleDiscipuladoChange}\r\n                  labelSelect={state.discipuladoSelect}\r\n                  dataOptions={mapDiscipuladossUnicosPastor}\r\n                  selectedOption={handleDiscipuladoChange}\r\n                />\r\n              </S.ContentC>\r\n            </S.Grid>\r\n            <S.Grid>\r\n              <TitleComponent title={`${FormFields.CELULA}:`} small primary />\r\n              <S.ContentC>\r\n                <S.IconC name=\"user-friends\" />\r\n                <SelectComponent\r\n                  onChange={handleCelulaChange}\r\n                  labelSelect={state.celulaSelect}\r\n                  dataOptions={celulaPastor}\r\n                  selectedOption={selectedOptionCelula}\r\n                />\r\n\r\n              </S.ContentC>\r\n            </S.Grid>\r\n          </>\r\n        );\r\n\r\n      case \"administrador\":\r\n        return (\r\n          <>\r\n            <S.Grid>\r\n              <TitleComponent title={`${FormFields.NETWORK}:`} small primary />\r\n              <S.ContentC>\r\n                <S.IconC name=\"vector-square\" />\r\n                <SelectComponent\r\n                  onChange={handleRedeChange}\r\n                  labelSelect={state.redeSelect}\r\n                  dataOptions={mapRedesUnicas}\r\n                  selectedOption={handleRedeChange}\r\n                  width='300'\r\n                />\r\n              </S.ContentC>\r\n            </S.Grid>\r\n            <S.Grid>\r\n              <TitleComponent title={`${FormFields.DISCIPLESHIP}:`} small primary />\r\n              <S.ContentC>\r\n                <S.IconC name=\"network-wired\" />\r\n                <SelectComponent\r\n                  onChange={(handleDiscipuladoChange)}\r\n                  labelSelect={state.discipuladoSelect}\r\n                  dataOptions={state.redeSelect && mapDiscipuladosUnicos}\r\n                  selectedOption={handleDiscipuladoChange}\r\n                  width='300'\r\n                  disabled={state.redeSelect === \"Selecione\" ? true : false}\r\n                />\r\n              </S.ContentC>\r\n            </S.Grid>\r\n            <S.Grid>\r\n              <TitleComponent title={`${FormFields.CELULA}:`} small primary />\r\n              <S.ContentC>\r\n                <S.IconC name=\"user-friends\" />\r\n                <SelectComponent\r\n                  onChange={handleCelulaChange}\r\n                  labelSelect={state.celulaSelect}\r\n                  dataOptions={celulaAdm}\r\n                  selectedOption={selectedOptionCelula}\r\n                  width='300'\r\n                  disabled={state.discipuladoSelect === \"Selecione\" ? true : false}\r\n                />\r\n              </S.ContentC>\r\n            </S.Grid>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <HeaderComponent>\r\n        <S.ContentHeader>\r\n          <S.Division>\r\n            <ComeBackComponent />\r\n            <S.Navigation>{MenuNavigation.MEMBERS}</S.Navigation>\r\n          </S.Division>\r\n          <ButtonComponent\r\n            title=\"Cadastrar\"\r\n            onPress={() => clean(\"Register\")}\r\n            width=\"136px\"\r\n            heigth=\"33px\"\r\n            size=\"12px\"\r\n            icon=\"user-plus\"\r\n            color=\"white\"\r\n          />\r\n        </S.ContentHeader>\r\n      </HeaderComponent>\r\n      <ScrollView>\r\n        <S.Content>\r\n          {loading ? (\r\n            <S.Loading source={loadingGif} />\r\n          ) : (\r\n            <Fragment>\r\n              {office()}\r\n              {state.celulaSelect !== \"Selecione\" &&\r\n                <>\r\n                  {newMembersList.length > 0 ? (\r\n                    newMembersList?.map((item: any) => {\r\n                      return (\r\n                        <Fragment>\r\n                          <PersonLabelComponent\r\n                            nome={item[1].nome}\r\n                            status={item[1].status}\r\n                            onPress={() =>\r\n                              navigation.navigate(\"MemberInformation\", {\r\n                                nome: `${item[1].nome}`,\r\n                                telefone: `${item[1].telefone}`,\r\n                                email: `${item[1].email}`,\r\n                                endereco: `${item[1].endereco}`,\r\n                                bairro: `${item[1].bairro}`,\r\n                                cep: `${item[1].cep}`,\r\n                                cidade: `${item[1].cidade}`,\r\n                                estado: `${item[1].estado}`,\r\n                                estado_civil: `${item[1].estado_civil}`,\r\n                                data_de_nascimento: `${format(new Date(item[1].data_de_nascimento), 'dd/MM/yyyy')}`,\r\n                                status: `${item[1].status}`,\r\n                                numero_casa: `${item[1].numero_casa}`,\r\n                                id: `${item[0]}`,\r\n                                active: setTrigger\r\n                              })\r\n                            }\r\n                            delMember={() => {\r\n                              setSendModal(true),\r\n                                setName(item[1].nome),\r\n                                setId(item[0]);\r\n                            }}\r\n                          />\r\n                        </Fragment>\r\n                      );\r\n                    })) : (\r\n                    <Text>Não há membros</Text>\r\n                  )}\r\n                </>\r\n              }\r\n            </Fragment>\r\n          )}\r\n        </S.Content>\r\n      </ScrollView>\r\n      <ModalComponent\r\n        isVisible={sendModal}\r\n        onBackdropPress={() => setSendModal(false)}\r\n      >\r\n        <RequestContentModalComponent\r\n          name={name}\r\n          cancel={() => setSendModal(false)}\r\n          confirm={() => {\r\n            deleteMember();\r\n          }}\r\n        />\r\n      </ModalComponent>\r\n      <ModalComponent\r\n        isVisible={modalConcluded}\r\n        onBackdropPress={() => setModalConcluded(false)}\r\n      >\r\n        <ApprovalRequest name={name} />\r\n      </ModalComponent>\r\n    </Fragment>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}