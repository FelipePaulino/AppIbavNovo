{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { connectApi } from \"../ConnectApi\";\n\nvar RequestService = function () {\n  function RequestService() {\n    _classCallCheck(this, RequestService);\n  }\n\n  _createClass(RequestService, [{\n    key: \"getCelulas\",\n    value: function () {\n      var _getCelulas = _asyncToGenerator(function* () {\n        var response = yield connectApi.get(\"/celulas.json\");\n\n        if (response.data) {\n          return response.data;\n        } else {\n          throw new Error(\"Algo deu errado na conexão do get\");\n        }\n      });\n\n      function getCelulas() {\n        return _getCelulas.apply(this, arguments);\n      }\n\n      return getCelulas;\n    }()\n  }, {\n    key: \"getReports\",\n    value: function () {\n      var _getReports = _asyncToGenerator(function* () {\n        var response = yield connectApi.get(\"/relatorios.json\");\n\n        if (response.data) {\n          return response.data;\n        } else {\n          throw new Error(\"Algo deu errado na conexão do get\");\n        }\n      });\n\n      function getReports() {\n        return _getReports.apply(this, arguments);\n      }\n\n      return getReports;\n    }()\n  }, {\n    key: \"getSingleReport\",\n    value: function () {\n      var _getSingleReport = _asyncToGenerator(function* (id) {\n        var response = yield connectApi.get(\"relatorios/\" + id + \".json\");\n\n        if (response.data) {\n          return response.data;\n        } else {\n          throw new Error(\"Algo deu errado na conexão do get\");\n        }\n      });\n\n      function getSingleReport(_x) {\n        return _getSingleReport.apply(this, arguments);\n      }\n\n      return getSingleReport;\n    }()\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = _asyncToGenerator(function* () {\n        var response = yield connectApi.get(\"/users.json\");\n\n        if (response.data) {\n          return response.data;\n        } else {\n          throw new Error(\"Algo deu errado na conexão do get\");\n        }\n      });\n\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }()\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator(function* (id) {\n        yield connectApi.delete(\"/users/\" + id + \".json\");\n      });\n\n      function deleteUser(_x2) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }]);\n\n  return RequestService;\n}();\n\nexport default RequestService;","map":{"version":3,"names":["connectApi","RequestService","response","get","data","Error","id","delete"],"sources":["C:/Users/felip/AppIbavNovo/app/src/common/services/RequestService/index.tsx"],"sourcesContent":["import { connectApi } from \"../ConnectApi\";\r\n\r\nclass RequestService {\r\n  async getCelulas() {\r\n    const response = await connectApi.get(\"/celulas.json\");\r\n\r\n    if (response.data) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(\"Algo deu errado na conexão do get\");\r\n    }\r\n  }\r\n\r\n  async getReports() {\r\n    const response = await connectApi.get(\"/relatorios.json\");\r\n\r\n    if (response.data) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(\"Algo deu errado na conexão do get\");\r\n    }\r\n  }\r\n\r\n  async getSingleReport(id: string) {\r\n    const response = await connectApi.get(`relatorios/${id}.json`);\r\n\r\n    if (response.data) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(\"Algo deu errado na conexão do get\");\r\n    }\r\n  }\r\n\r\n  async getUsers() {\r\n    const response = await connectApi.get(\"/users.json\");\r\n\r\n    if (response.data) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(\"Algo deu errado na conexão do get\");\r\n    }\r\n  }\r\n\r\n  async deleteUser(id: string) {\r\n    await connectApi.delete(`/users/${id}.json`);\r\n  }\r\n}\r\n\r\nexport default RequestService;\r\n"],"mappings":";;;AAAA,SAASA,UAAT;;IAEMC,c;;;;;;;;0CACJ,aAAmB;QACjB,IAAMC,QAAQ,SAASF,UAAU,CAACG,GAAX,CAAe,eAAf,CAAvB;;QAEA,IAAID,QAAQ,CAACE,IAAb,EAAmB;UACjB,OAAOF,QAAQ,CAACE,IAAhB;QACD,CAFD,MAEO;UACL,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;QACD;MACF,C;;;;;;;;;;;0CAED,aAAmB;QACjB,IAAMH,QAAQ,SAASF,UAAU,CAACG,GAAX,CAAe,kBAAf,CAAvB;;QAEA,IAAID,QAAQ,CAACE,IAAb,EAAmB;UACjB,OAAOF,QAAQ,CAACE,IAAhB;QACD,CAFD,MAEO;UACL,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;QACD;MACF,C;;;;;;;;;;;+CAED,WAAsBC,EAAtB,EAAkC;QAChC,IAAMJ,QAAQ,SAASF,UAAU,CAACG,GAAX,iBAA6BG,EAA7B,WAAvB;;QAEA,IAAIJ,QAAQ,CAACE,IAAb,EAAmB;UACjB,OAAOF,QAAQ,CAACE,IAAhB;QACD,CAFD,MAEO;UACL,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;QACD;MACF,C;;;;;;;;;;;wCAED,aAAiB;QACf,IAAMH,QAAQ,SAASF,UAAU,CAACG,GAAX,CAAe,aAAf,CAAvB;;QAEA,IAAID,QAAQ,CAACE,IAAb,EAAmB;UACjB,OAAOF,QAAQ,CAACE,IAAhB;QACD,CAFD,MAEO;UACL,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;QACD;MACF,C;;;;;;;;;;;0CAED,WAAiBC,EAAjB,EAA6B;QAC3B,MAAMN,UAAU,CAACO,MAAX,aAA4BD,EAA5B,WAAN;MACD,C;;;;;;;;;;;;;AAGH,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}